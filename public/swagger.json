{
  "swagger": "2.0",
  "info": {
    "description": " Documentation Generateed Using SWAGGER2 for our Rest API",
    "version": "2.0",
    "title": "Assessment Service"
  },
  "host": "apigatewaysvc-hwr7nalbaq-el.a.run.app/gateway/assessment",
  "basePath": "/",
  "tags": [
    {
      "name": "succcess-prediction-controller",
      "description": "Succcess Prediction Controller"
    },
    {
      "name": "leader-board-controller",
      "description": "Leader Board Controller"
    },
    {
      "name": "user-role-mapping-controller",
      "description": "User Role Mapping Controller"
    },
    {
      "name": "sonar-quality-rules-controller",
      "description": "Sonar Quality Rules Controller"
    },
    {
      "name": "mobile-notification-controller",
      "description": "Mobile Notification Controller"
    },
    { "name": "common-controller", "description": "Common Controller" },
    {
      "name": "organization-role-mapping-controller",
      "description": "Organization Role Mapping Controller"
    },
    {
      "name": "difficulty-master-controller",
      "description": "Difficulty Master Controller"
    },
    {
      "name": "associate-camera-snapshot-controller",
      "description": "Associate Camera Snapshot Controller"
    },
    {
      "name": "question-master-controller",
      "description": "Question Master Controller"
    },
    {
      "name": "offer-letter-controller",
      "description": "Offer Letter Controller"
    },
    {
      "name": "ai-prediction-controller",
      "description": "AI Prediction Controller"
    },
    {
      "name": "rc-assessment-creation-controller",
      "description": "RC Assessment Creation Controller"
    },
    {
      "name": "candidate-master-controller",
      "description": "Candidate Master Controller"
    },
    {
      "name": "taking-assessment-controller",
      "description": "Taking Assessment Controller"
    },
    {
      "name": "right-master-controller",
      "description": "Right Master Controller"
    },
    {
      "name": "assessment-creation-controller",
      "description": "Assessment Creation Controller"
    },
    {
      "name": "sonar-project-controller",
      "description": "Sonar Project Controller"
    },
    {
      "name": "student-validate-controller",
      "description": "Student Validate Controller"
    },
    {
      "name": "role-master-controller",
      "description": "Role Master Controller"
    },
    {
      "name": "skill-builder-apis-controller",
      "description": "Skill Builder Apis Controller"
    },
    {
      "name": "user-master-controller",
      "description": "User Master Controller"
    },
    {
      "name": "badge-student-mapping-controller",
      "description": "Badge Student Mapping Controller"
    },
    {
      "name": "student-scholarship-controller",
      "description": "Student Scholarship Controller"
    },
    {
      "name": "event-master-controller",
      "description": "Event Master Controller"
    },
    {
      "name": "recruiter-dashboard-controller",
      "description": "Recruiter Dashboard Controller"
    },
    {
      "name": "media-upload-controller",
      "description": "Media Upload Controller"
    },
    {
      "name": "sonar-quality-profile-controller",
      "description": "Sonar Quality Profile Controller"
    },
    {
      "name": "language-instructor-mapping-controller",
      "description": "Language Instructor Mapping Controller"
    },
    {
      "name": "student-scholarship-mapping-controller",
      "description": "Student Scholarship Mapping Controller"
    },
    {
      "name": "interviewer-dashboard-controller",
      "description": "Interviewer Dashboard Controller"
    },
    {
      "name": "batch-associate-mapping-controller",
      "description": "Batch Associate Mapping Controller"
    },
    {
      "name": "technology-admin-controller",
      "description": "Technology Admin Controller"
    },
    { "name": "job-portal-controller", "description": "Job Portal Controller" },
    {
      "name": "user-specialization-controller",
      "description": "User Specialization Controller"
    },
    {
      "name": "badge-master-controller",
      "description": "Badge Master Controller"
    },
    {
      "name": "batch-master-controller",
      "description": "Batch Master Controller"
    },
    { "name": "dashboard-controller", "description": "Dashboard Controller" },
    {
      "name": "batch-instructor-mapping-controller",
      "description": "Batch Instructor Mapping Controller"
    },
    {
      "name": "role-right-mapping-controller",
      "description": "Role Right Mapping Controller"
    },
    {
      "name": "calender-event-controller",
      "description": "Calender Event Controller"
    },
    { "name": "compiler-controller", "description": "Compiler Controller" },
    {
      "name": "language-master-controller",
      "description": "Language Master Controller"
    },
    { "name": "custom-auth-contoller", "description": "Custom Auth Contoller" },
    {
      "name": "organization-controller",
      "description": "Organization Controller"
    },
    {
      "name": "assessment-coding-marks-controller",
      "description": "Assessment Coding Marks Controller"
    },
    {
      "name": "organization-right-mapping-controller",
      "description": "Organization Right Mapping Controller"
    },
    {
      "name": "upcoming-events-upload-controller",
      "description": "Upcoming Events Upload Controller"
    },
    { "name": "user-controller", "description": "User Controller" },
    {
      "name": "topic-master-controller",
      "description": "Topic Master Controller"
    }
  ],
  "paths": {
    "/aipredict/predictscore": {
      "post": {
        "tags": ["ai-prediction-controller"],
        "summary": "Predict AI Score ",
        "operationId": "predictAIScoreUsingPOST",
        "consumes": ["*/*"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/predictAIScore" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "list",
        "operationId": "listUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/add": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "Save assessment details",
        "description": "THIS METHOD IS USE TO SAVE ASSESSMENT DETAILS",
        "operationId": "addUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/all": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "Get all assessment details",
        "description": "This method is use to get all assessment details based on the organization id",
        "operationId": "allAssessmentListUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/delete": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "Delete assessment details",
        "description": "THIS METHOD IS USE TO DELETE ASSESSMENT DETAILS",
        "operationId": "deleteUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/get": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "Get assessment details",
        "description": "THIS METHOD IS USE TO GET ASSESSMENT DETAILS",
        "operationId": "getByIdUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/getTopicsForRanAssess": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "Get topics related details",
        "description": "THIS METHOD IS USE TO FETCH ALL TOPICS RELATED TO THIS LANGUAGE ID AND DIFFICULTY ID WITH TOTAL NO OF MCQ QUESTION NOT FETCHING PARTICULAR TOPIC IF NO OF MCQ QUESTION = 0",
        "operationId": "getTopicsForRanAssessUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/questions": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "Fetch question",
        "description": "THIS METHOD IS USE TO GET QUESTION ",
        "operationId": "getQuestionsForAssessmentUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/quizForStudent": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "Quiz For Student",
        "description": "THIS METHOD IS USE TO FETCH QUIZE FOR STUDENT",
        "operationId": "assessmentListUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/saveRanAssess": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "Save random assessment details",
        "description": "THIS METHOD IS USE TO SAVE THE RANDOM ASSESSMENT DATA WITH RANDOM CHOICE OF MCQ QUESTION WITH MULTIPLE TOPICS",
        "operationId": "saveRanAssessUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/update": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "update assessment details ",
        "description": "THIS METHOD IS USE TO UPDATE ASSESSMENT DETAILS",
        "operationId": "updateUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/updateRanAssess": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "Update random assessment details",
        "description": "THIS METHOD IS UES TO UPDATE RANDOM ASSESSMENT DATA WITH RANDOM CHOICE OF MCQ QUESTION WITH MULTIPLE TOPICS",
        "operationId": "updateRanAssessUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/assessments/verifyCode": {
      "post": {
        "tags": ["assessment-creation-controller"],
        "summary": "Verify user code",
        "description": "This method is use to verify user code",
        "operationId": "verifyCodeUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/associate/deletesnap": {
      "post": {
        "tags": ["associate-camera-snapshot-controller"],
        "summary": "delete snap ",
        "operationId": "stdntDelSnapshotsUsingPOST",
        "consumes": ["application/json", "*/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssociateCameraSnapshotControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/associate/snapsave": {
      "post": {
        "tags": ["associate-camera-snapshot-controller"],
        "summary": "save snap ",
        "operationId": "saveSnapshotUsingPOST",
        "consumes": ["application/json", "*/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssociateCameraSnapshotControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badges": {
      "post": {
        "tags": ["badge-master-controller"],
        "summary": "badge list",
        "operationId": "listUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BadgeMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badges/add": {
      "post": {
        "tags": ["badge-master-controller"],
        "summary": "add badge",
        "operationId": "uploadBadgesUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "badge",
            "in": "formData",
            "description": "badge",
            "required": true,
            "type": "file"
          },
          {
            "name": "badge_name",
            "in": "query",
            "description": "badge_name",
            "required": true,
            "type": "string"
          },
          {
            "name": "badge_desc",
            "in": "query",
            "description": "badge_desc",
            "required": true,
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "description": "active",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "organizationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BadgeMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badges/delete": {
      "post": {
        "tags": ["badge-master-controller"],
        "summary": "delete badge",
        "operationId": "deleteBadgeUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BadgeMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badges/get": {
      "post": {
        "tags": ["badge-master-controller"],
        "summary": "get badge",
        "operationId": "getByIdUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BadgeMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badges/listbyid": {
      "post": {
        "tags": ["badge-master-controller"],
        "summary": "get badge by id",
        "operationId": "getBadgesByStudentIdUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BadgeMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badges/studentcertification": {
      "post": {
        "tags": ["badge-master-controller"],
        "summary": "student certification",
        "operationId": "getStudentCertificationUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BadgeMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badges/update": {
      "post": {
        "tags": ["badge-master-controller"],
        "summary": "update badge",
        "operationId": "updateUsingPOST_1",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "badge_data",
            "in": "formData",
            "description": "badge_data",
            "required": true,
            "type": "file"
          },
          {
            "name": "badge_name",
            "in": "query",
            "description": "badge_name",
            "required": true,
            "type": "string"
          },
          {
            "name": "badge_desc",
            "in": "query",
            "description": "badge_desc",
            "required": true,
            "type": "string"
          },
          {
            "name": "badge_id",
            "in": "query",
            "description": "badge_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "description": "active",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "organizationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BadgeMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badgestdnts/add": {
      "post": {
        "tags": ["badge-student-mapping-controller"],
        "summary": "Add badge mapping ",
        "description": "This method is use to add badge mapping",
        "operationId": "addUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BadgeStudentMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badgestdnts/certification": {
      "post": {
        "tags": ["badge-student-mapping-controller"],
        "summary": "Get certified student ",
        "description": "This method is use to find certified student",
        "operationId": "certifiedStudentsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BadgeStudentMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badgestdnts/findall": {
      "post": {
        "tags": ["badge-student-mapping-controller"],
        "summary": "Get all certified student ",
        "description": "This method is use to get all certified student ",
        "operationId": "findAllCertifiedStudentsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BadgeStudentMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badgestdnts/findbycertid": {
      "post": {
        "tags": ["badge-student-mapping-controller"],
        "summary": "Find Student certificate number ",
        "description": "This method is use get certificate number",
        "operationId": "findDetailsByCertificateNumberUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BadgeStudentMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badgestdnts/findbylevel": {
      "post": {
        "tags": ["badge-student-mapping-controller"],
        "summary": "Find Student level ",
        "description": "This method is use retrive student level",
        "operationId": "findStudentsForLevelMappingUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BadgeStudentMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/badgestdnts/findbyname": {
      "post": {
        "tags": ["badge-student-mapping-controller"],
        "summary": "Get student details base on user name",
        "description": "This method is use to find student details base on user name ",
        "operationId": "findStudentDetailsByUserNameUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BadgeStudentMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/batchassoci/add": {
      "post": {
        "tags": ["batch-associate-mapping-controller"],
        "summary": "Add batch associate mapping",
        "description": "This method is use to add batch associate mapping ",
        "operationId": "addUsingPOST_2",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BatchAssociateMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/batches": {
      "post": {
        "tags": ["batch-master-controller"],
        "summary": "batch list",
        "operationId": "listUsingPOST_2",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BatchMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/batches/add": {
      "post": {
        "tags": ["batch-master-controller"],
        "summary": "add batch",
        "operationId": "addUsingPOST_4",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BatchMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/batches/delete": {
      "post": {
        "tags": ["batch-master-controller"],
        "summary": "delete batch",
        "operationId": "deleteUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BatchMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/batches/get": {
      "post": {
        "tags": ["batch-master-controller"],
        "summary": "get batch",
        "operationId": "getByIdUsingPOST_2",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BatchMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/batches/update": {
      "post": {
        "tags": ["batch-master-controller"],
        "summary": "update batch",
        "operationId": "updateUsingPOST_2",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BatchMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/batchinstructor/add": {
      "post": {
        "tags": ["batch-instructor-mapping-controller"],
        "summary": "add batch",
        "operationId": "addUsingPOST_3",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BatchInstructorMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/add": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Add new appointment",
        "description": "This method is use to add new appointment",
        "operationId": "addUsingPOST_5",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/delete": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Delete appointment",
        "description": "This method is use to delete appointment",
        "operationId": "deleteUsingPOST_2",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/get": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Get appointment",
        "description": "This method is use to get appointment",
        "operationId": "listUsingPOST_3",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/getAllCandidateEmail": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Add student",
        "description": "This method is use to upload resume in GCS",
        "operationId": "getAllCandidateEmailUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/getAllInterviwerEmail": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Add student",
        "description": "This method is use to upload resume in GCS",
        "operationId": "getAllInterviwerEmailUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/getAllIntrSchedForRecMang": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "recMangList",
        "operationId": "recMangListUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/getNotificationForCandidate": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Get candidate notification ",
        "description": "This method is use to get candidate notification ",
        "operationId": "msgListForCandiUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/getNotificationForInstructor1": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Get notification for instructor",
        "description": "This method is use to notification for instructor",
        "operationId": "msgListForInstrUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/getNotificationForInterviewer": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Add student",
        "description": "This method is use to upload resume in GCS",
        "operationId": "getNotificationForInterviewerUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/getNotificationForRecruiter": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Get notification for recruiter ",
        "description": "This method is use to notification for recruiter ",
        "operationId": "msgListFrRecUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/getNotificationForRecruiterManager": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Get notification for recruite manager ",
        "description": "This method is use to get notification for recruiter manager",
        "operationId": "getNotificationForRecruiterManagerUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/getStudentStage": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Get student stage",
        "description": "This method is use to get student stage",
        "operationId": "getStudentStageUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/recruiterManagerAllInterList": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Get all recruiter manager interviewer list",
        "description": "This method is use to get all recruiter list",
        "operationId": "recMangListAllInterviewUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/calender/recruiterschedulemeet": {
      "post": {
        "tags": ["calender-event-controller"],
        "summary": "Get recruiter schedule metting ",
        "description": "This method is use to get recruiter schedule metting ",
        "operationId": "recSchdMssgUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CalenderEventControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/candidate/add": {
      "post": {
        "tags": ["candidate-master-controller"],
        "summary": "add candidate",
        "operationId": "addCandidateUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CandidateMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/candidate/bulkmail": {
      "post": {
        "tags": ["candidate-master-controller"],
        "summary": "sent bulk mail",
        "operationId": "sentBulkMailUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CandidateMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/candidate/esave": {
      "post": {
        "tags": ["candidate-master-controller"],
        "summary": "excel save",
        "operationId": "excelSaveUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CandidateMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/candidate/mailsend": {
      "post": {
        "tags": ["candidate-master-controller"],
        "summary": "mail send",
        "operationId": "mailSendUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CandidateMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/candidate/sendmail": {
      "post": {
        "tags": ["candidate-master-controller"],
        "summary": "sent mail",
        "operationId": "sentMailUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CandidateMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/candidate/stdntemail": {
      "post": {
        "tags": ["candidate-master-controller"],
        "summary": "student email notify",
        "operationId": "stdntEmailNotifyUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CandidateMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/candidate/upload": {
      "post": {
        "tags": ["candidate-master-controller"],
        "summary": "upload candidate",
        "operationId": "uploadExcelFileDataUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CandidateMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/cmp/crt": {
      "post": {
        "tags": ["compiler-controller"],
        "summary": "Save source code",
        "operationId": "saveSourceCodeUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CompilerControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/codemarks": {
      "post": {
        "tags": ["assessment-coding-marks-controller"],
        "summary": "Get All Coding Marks By OrganizationId ",
        "operationId": "findAllForDropdownUsingPOST",
        "consumes": ["application/json", "*/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCodingMarksControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/codemarks/add": {
      "post": {
        "tags": ["assessment-coding-marks-controller"],
        "summary": "Add Coding Marks ",
        "operationId": "addCodingMarksUsingPOST",
        "consumes": ["application/json", "*/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCodingMarksControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/codemarks/delete": {
      "post": {
        "tags": ["assessment-coding-marks-controller"],
        "summary": "delete Coding Marks ",
        "operationId": "deleteCodingMarksByIdUsingPOST",
        "consumes": ["application/json", "*/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCodingMarksControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/codemarks/get": {
      "post": {
        "tags": ["assessment-coding-marks-controller"],
        "summary": "Get Coding Marks ",
        "operationId": "getCodingMarksByIdUsingPOST",
        "consumes": ["application/json", "*/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCodingMarksControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/codemarks/issues": {
      "post": {
        "tags": ["assessment-coding-marks-controller"],
        "summary": "update coding issues ",
        "operationId": "updateCodingIssuesUsingPOST",
        "consumes": ["application/json", "*/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCodingMarksControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/codemarks/update": {
      "post": {
        "tags": ["assessment-coding-marks-controller"],
        "summary": "Update Coding Marks ",
        "operationId": "updateCodingMarksByIdUsingPOST",
        "consumes": ["application/json", "*/*", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssessmentCodingMarksControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/comingevents/add": {
      "post": {
        "tags": ["upcoming-events-upload-controller"],
        "summary": "Upload new event",
        "operationId": "uploadEventImgUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "description": "image",
            "required": true,
            "type": "file"
          },
          {
            "name": "event_desc",
            "in": "query",
            "description": "event_desc",
            "required": true,
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "description": "active",
            "required": true,
            "type": "string"
          },
          {
            "name": "event_date",
            "in": "query",
            "description": "event_date",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "organizationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpcomingEventsUploadControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/comingevents/delete": {
      "post": {
        "tags": ["upcoming-events-upload-controller"],
        "summary": "Delete image",
        "operationId": "deleteImgUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpcomingEventsUploadControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/comingevents/getImg": {
      "post": {
        "tags": ["upcoming-events-upload-controller"],
        "summary": "Get upload image",
        "operationId": "getEventImgUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpcomingEventsUploadControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/comingevents/getImgById": {
      "post": {
        "tags": ["upcoming-events-upload-controller"],
        "summary": "Upload image by id",
        "operationId": "getEventByIdUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpcomingEventsUploadControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/comingevents/update": {
      "post": {
        "tags": ["upcoming-events-upload-controller"],
        "summary": "Update event",
        "operationId": "updateEventUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpcomingEventsUploadControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/allInterviewerJobVisible": {
      "post": {
        "tags": ["common-controller"],
        "summary": "all job visible for interviewer",
        "operationId": "allInterviewerJobVisibleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/allJobOpeningsforInterviewer": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get all job for interviewer",
        "operationId": "allJobOpeningsforInterviewerUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/allJobOpeningsforRecruiter": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get all job for recruiter",
        "operationId": "allJobOpeningsforRecruiterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/allRecruiterJobVisible": {
      "post": {
        "tags": ["common-controller"],
        "summary": "all job visible for recruiter",
        "operationId": "allRecruiterJobVisibleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/allinstructors": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get instructor by language",
        "operationId": "getAllInstructorsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/allschrshp": {
      "post": {
        "tags": ["common-controller"],
        "summary": "getScholarshipsForDropDown",
        "operationId": "getScholarshipsForDropDownUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/associates": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get associates",
        "operationId": "getAssociatesForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/associbybatch": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get associates by batch",
        "operationId": "getAssociatesByBatchUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/badges": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get badges",
        "operationId": "getBadgesForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/batches": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get batches",
        "operationId": "getBatchesForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/codingmarks": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get coding marks",
        "operationId": "getCodingMarksForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/defaultdata": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get default data for admin",
        "operationId": "getDefaultDataForAdminUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/difficulties": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get Difficulty",
        "operationId": "getDifficultysForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/events": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get events",
        "operationId": "getEventForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/filterdata": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get filter data",
        "operationId": "getFilterdataByBatchIdUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/instructors": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get instructors",
        "operationId": "getInstructorsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/instructorsbybatch": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get instructor by batch",
        "operationId": "getInstructorByBatchesUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/instructorsbylanguage": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get instructor by language",
        "operationId": "getInstructorByLanguageUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/jobdesignation": {
      "post": {
        "tags": ["common-controller"],
        "summary": "getJobDesignationForDropDown",
        "operationId": "getJobDesignationForDropDownUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/jobportals": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get job portal",
        "operationId": "getJobPortalForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/jobprofiles": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get job profile",
        "operationId": "getJobProfilesForSideNavbarUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/languages": {
      "post": {
        "tags": ["common-controller"],
        "summary": "get all languages",
        "operationId": "getLanguagesForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/orgRights": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get right by orgAdmin",
        "operationId": "getRightByOrgNameUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/pdftodocx": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Convert pdf to docx",
        "operationId": "convertPdfToDocxUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "document",
            "in": "formData",
            "description": "document",
            "required": true,
            "type": "file"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/quetypes": {
      "post": {
        "tags": ["common-controller"],
        "summary": "getAllQuestionTypes",
        "operationId": "getAllQuestionTypesUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "map",
            "in": "query",
            "description": "map",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/rights": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get rights",
        "operationId": "getRightsForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/rightsbyrole": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get rights by role",
        "operationId": "getRightsByRoleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/roleforright": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get Role Right",
        "operationId": "getRolesForRightUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/roles": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get Roles",
        "operationId": "getRolesByOrgForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/rolesforsa": {
      "post": {
        "tags": ["common-controller"],
        "summary": "getRolesForSAForDropDown",
        "operationId": "getRolesForSAForDropDownUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/stdntbyschrshp": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get student by scholarship",
        "operationId": "getStudentsByScholarshipUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/stdntforschrshp": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get student for scholarship",
        "operationId": "getStudentsForScholarshipUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/stdntrole": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get students for role map",
        "operationId": "getStdntRolesForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/stdnts": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get students",
        "operationId": "getSelectedStdntsForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/stdntsbybadge": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get student by badge",
        "operationId": "getStudentsByBadgeUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/stdntsbyrole": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get student by role",
        "operationId": "getStdntsByRoleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/stdtouser": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get students for role map",
        "operationId": "getSelectedStdntsForRoleMapUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/students": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get students",
        "operationId": "getStudentsForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/topics": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get all topics",
        "operationId": "getTopicsForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/users": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get Users",
        "operationId": "getUsersForDropDownUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/common/usersbyrole": {
      "post": {
        "tags": ["common-controller"],
        "summary": "Get Users by role",
        "operationId": "getUsersByRoleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CommonControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/cstmauth/feedback": {
      "post": {
        "tags": ["custom-auth-contoller"],
        "summary": "save feedback",
        "operationId": "saveFeedBackUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CustomAuthContollerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/cstmauth/message": {
      "post": {
        "tags": ["custom-auth-contoller"],
        "summary": "send message",
        "operationId": "sendMessageUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CustomAuthContollerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/aassessment": {
      "post": {
        "tags": ["dashboard-controller"],
        "summary": "Resume upload",
        "description": "This method is use to upload resume in GCS",
        "operationId": "getAssessmentForAssociatesUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DashboardControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/allStudent": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "All complete assessment for recruiter",
        "operationId": "AllCompleAssessmentForRecruiterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/allstdntdetails": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get all student details",
        "operationId": "allStudentsDetailsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/asscompltd": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Assessment completed",
        "operationId": "assessmentCompletedUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/asscompltdexcel": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Assessment completed for excel",
        "operationId": "assessmentCompletedForExcelUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/assignintvwr": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "assing interviewer",
        "operationId": "assignInterviewerUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/asstostage1": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Associate to stage1",
        "operationId": "assStndtByAssCompltdUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/avgallscores": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Get all average score",
        "description": "This method is use to get all average score details",
        "operationId": "stdntsAllAvgScoresUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/codematrix": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Get all code matrix",
        "description": "This method is use to get all code matrix",
        "operationId": "getCodeQualityMatrixUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/comments": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Recruiter comments",
        "operationId": "recruiterCommentsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/detailsbyid": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get student detail by id",
        "operationId": "studentDetailsByIdUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/followup": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "follow up students",
        "operationId": "followUpStudentsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/followupstdnts": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get follow up students",
        "operationId": "getfollowUpStudentsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/getAllDashboardDetails": {
      "post": {
        "tags": ["dashboard-controller"],
        "summary": "Fetch dashboard details",
        "description": "This method is use to fetch dashboard details",
        "operationId": "getAllDashboardDetailsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DashboardControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/getAssociateProfile": {
      "post": {
        "tags": ["dashboard-controller"],
        "summary": "Fetch associate profile",
        "description": "This method is use to fetch associate profile",
        "operationId": "getAssociateProfileUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DashboardControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/getAssociatesBatchWisePerformance": {
      "post": {
        "tags": ["dashboard-controller"],
        "summary": "Fetch associate batch performace",
        "description": "This method is use to fetch associate batch performace",
        "operationId": "getAssociatesBatchWisePerformanceUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DashboardControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/getAssociatesPerBatch": {
      "post": {
        "tags": ["dashboard-controller"],
        "summary": "Fetch associate per batch",
        "description": "This method is use to fetch associate per batch",
        "operationId": "getAssociatesForInstructorUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DashboardControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/getHistoricPerform": {
      "post": {
        "tags": ["dashboard-controller"],
        "summary": "Fetch historic proform",
        "description": "This method is use to fetch historic proform",
        "operationId": "getHistoricPerformanceUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DashboardControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/getbatchwebcam": {
      "post": {
        "tags": ["dashboard-controller"],
        "summary": "getBatchWebCam",
        "operationId": "getBatchWebCamUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/getinstructorBatch": {
      "post": {
        "tags": ["dashboard-controller"],
        "summary": "Fetch instructor batch",
        "description": "This method is use to fetch associate batch performace",
        "operationId": "getinstructorBatchUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DashboardControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/intJobProfiles": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Get all job profile",
        "description": "This method is use to get all job profile",
        "operationId": "getRecJobProfileUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/intvdashfilter": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Get all interviewer dashboard ",
        "description": "This method is use to get interviewer dashboard",
        "operationId": "interDashFilterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/intvwstdnts": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Get all interviewer students details",
        "description": "This method is use to get all interviewer students details",
        "operationId": "interviewerStudentsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/jobCategories": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "jobProfileCompetenciesByStdntId",
        "operationId": "jobProfileCompetenciesByStdntIdUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recJobProfiles": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get job profile for recruiter",
        "operationId": "getRecJobProfileUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recManJobProfiles": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get job profile",
        "operationId": "getRecManJobProfileUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recallavgscorefilter": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Recruiter average score filter",
        "operationId": "recruiterAllAvgFilterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recallstdnts": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get student detail for recruiter",
        "operationId": "studentdetailsForRecuriterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recavgscores": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Recruiter average score",
        "operationId": "recruiterAvgScoresUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recdash": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get job profile for recruiter",
        "operationId": "recruiterDashboardUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recemails": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Recruiter manager dashboard",
        "operationId": "recEmailNotificationUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recleaderboardfilter": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Recruiter leader filter",
        "operationId": "recruiterLeaderFilterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recmandashfilter": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Recruiter dashboard filter",
        "operationId": "recruiterDashFilterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recmonthrepfilter": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Recruiter top card filter",
        "operationId": "recruiterMonthRepFilterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recruionedash": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Recruiter dashboard",
        "operationId": "recruiterDashOneUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/recruitermanager": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Recruiter manager dashboard",
        "operationId": "recruiterManagerDashUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/rectopcardfilter": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Recruiter top card filter",
        "operationId": "recruiterTopcardFilterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/stdntExcelData": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get student detail for excel",
        "operationId": "studentdetailsForExcelUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/stdntalldetails": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get student all details",
        "operationId": "studenAlltdetailsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/stdntcomments": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Student comments",
        "operationId": "studentCommentUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/stdntdetails": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get student details",
        "operationId": "studentdetailsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/stdntdetailsweb": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get student detail for web",
        "operationId": "studentdetailsForWebUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/studenttopicperf": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Get student topic",
        "description": "This method is use to get student topic",
        "operationId": "studentTopicWisePerfUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/topdata": {
      "post": {
        "tags": ["recruiter-dashboard-controller"],
        "summary": "Get job profile for recruiter",
        "operationId": "recruiterTopStudentsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecruiterDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/topicWiseScores": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "studentTopicWiseScore",
        "operationId": "studentTopicWiseScoreUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/totalcounts": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Get total count",
        "description": "This method is use to count top card",
        "operationId": "topCardsCountUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/updatestdtdetails": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Update student details",
        "description": "This method is use to update student details",
        "operationId": "saveInterviewer1FeedbackUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/updatestdtfdbck2": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Update student feedback details",
        "description": "This method is use to update feedback details",
        "operationId": "saveInterviewerTwoFeedbackUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/updatestdtfdbck3": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Update student feedback stage 3",
        "description": "This method is use to update feedback details interviewer stage 3",
        "operationId": "saveInterviewer3FeedbackUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/dashboard/userrole": {
      "post": {
        "tags": ["interviewer-dashboard-controller"],
        "summary": "Get user role",
        "description": "This method is use to get user role",
        "operationId": "getUserRoleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InterviewerDashboardControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/difficulties": {
      "post": {
        "tags": ["difficulty-master-controller"],
        "summary": "difficulty list",
        "operationId": "listUsingPOST_4",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DifficultyMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/difficulties/add": {
      "post": {
        "tags": ["difficulty-master-controller"],
        "summary": "Add difficulty ",
        "operationId": "addUsingPOST_6",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DifficultyMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/difficulties/delete": {
      "post": {
        "tags": ["difficulty-master-controller"],
        "summary": "delete difficulty",
        "operationId": "deleteUsingPOST_3",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DifficultyMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/difficulties/get": {
      "post": {
        "tags": ["difficulty-master-controller"],
        "summary": "Get difficulty by id",
        "operationId": "getByIdUsingPOST_3",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DifficultyMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/difficulties/update": {
      "post": {
        "tags": ["difficulty-master-controller"],
        "summary": "update difficulty",
        "operationId": "updateUsingPOST_3",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DifficultyMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/events": {
      "post": {
        "tags": ["event-master-controller"],
        "summary": "event list",
        "operationId": "listUsingPOST_5",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EventMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/events/add": {
      "post": {
        "tags": ["event-master-controller"],
        "summary": "event add",
        "operationId": "addUsingPOST_7",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EventMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/events/delete": {
      "post": {
        "tags": ["event-master-controller"],
        "summary": "delete event",
        "operationId": "deleteUsingPOST_4",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EventMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/events/get": {
      "post": {
        "tags": ["event-master-controller"],
        "summary": "Get event by id",
        "operationId": "getByIdUsingPOST_4",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EventMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/events/update": {
      "post": {
        "tags": ["event-master-controller"],
        "summary": "update event",
        "operationId": "updateUsingPOST_4",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EventMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Get Job Details",
        "description": "This method is use to get jobportal details ",
        "operationId": "findAllUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/add": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Save Job",
        "description": "This method is use to save ",
        "operationId": "addJobPostUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/assignintvw": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Get assign interview details",
        "description": "This method is use to get assign interview details based on the organization name",
        "operationId": "getAssignInterviewersUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/categories": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "getJobProfileCategories",
        "operationId": "getJobProfileCategoriesUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/delete": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Delete Job",
        "description": "This method is use to delete job based on job portal id",
        "operationId": "deleteJobPostUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/details": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Get job portel Details",
        "description": "This method is use to fetching job portal details base on job portal id and organization id",
        "operationId": "jobPortalDetailsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/findall": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Get all job title ",
        "description": "This method is use to fetch all job title list ",
        "operationId": "findAllForDropdownUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/get": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Get all job",
        "description": "This method is use to fetch all job Post base on the job portal id",
        "operationId": "getJobPostUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/getJobOrder": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Get job orders",
        "description": "This method is use to get job order based on the organization name",
        "operationId": "getJobOrdersByOrgsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/getdesc": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Get all job description",
        "description": "This method is use to fetch all job description base on model name and designation",
        "operationId": "findJobDescriptionUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/jobs": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Get Active Job Details",
        "description": "This method is use to fetch all active job list based on organization name ",
        "operationId": "findAllActiveJobsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/template": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Get template",
        "description": "This method is use to get template details based on the organization name",
        "operationId": "getTemplateUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/update": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "updateJobPost",
        "operationId": "updateJobPostUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/updtactive": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Update Active ",
        "description": "This method is use to update active based on job portal id",
        "operationId": "updateActiveUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/jobportal/workflow": {
      "post": {
        "tags": ["job-portal-controller"],
        "summary": "Get workflow details ",
        "description": "This method is use to fetching workflow details base on job portal id",
        "operationId": "jobPortalWorkflowUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/JobPortalSwaggerController" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/languageinstructor/add": {
      "post": {
        "tags": ["language-instructor-mapping-controller"],
        "summary": "event list",
        "operationId": "addUsingPOST_8",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageInstructorMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/languages": {
      "post": {
        "tags": ["language-master-controller"],
        "summary": "Language list",
        "operationId": "listUsingPOST_6",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/languages/add": {
      "post": {
        "tags": ["language-master-controller"],
        "summary": "Add language",
        "operationId": "addUsingPOST_9",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/languages/delete": {
      "post": {
        "tags": ["language-master-controller"],
        "summary": "delete language",
        "operationId": "deleteUsingPOST_5",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/languages/get": {
      "post": {
        "tags": ["language-master-controller"],
        "summary": "Get language by id",
        "operationId": "getByIdUsingPOST_5",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/languages/update": {
      "post": {
        "tags": ["language-master-controller"],
        "summary": "update language",
        "operationId": "updateUsingPOST_5",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/leaderboard/topcoders": {
      "get": {
        "tags": ["leader-board-controller"],
        "summary": "topCoders",
        "operationId": "topCodersUsingGET",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/media/checkResume": {
      "post": {
        "tags": ["media-upload-controller"],
        "summary": "Check valid resume",
        "description": "This method is use to check resume in GCS",
        "operationId": "studentUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MediaUploadcontrollrPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/media/fetchAllVideos": {
      "post": {
        "tags": ["media-upload-controller"],
        "summary": "Fetch video details",
        "description": "This method is use to fetch video in GCS",
        "operationId": "fetchAllVideoUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MediaUploadcontrollrPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/media/fetchResume": {
      "post": {
        "tags": ["media-upload-controller"],
        "summary": "Fetch resume",
        "description": "This method is use to fetch resume in GCS",
        "operationId": "fetchResumeUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MediaUploadcontrollrPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/media/getMediaDetails": {
      "post": {
        "tags": ["media-upload-controller"],
        "summary": "Fetch metting details",
        "description": "This method is use to fetch metting details in GCS",
        "operationId": "getMediaDetailsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MediaUploadcontrollrPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/media/quesList": {
      "get": {
        "tags": ["media-upload-controller"],
        "summary": "Fetch question list details",
        "description": "This method is use to fetch question list in GCS",
        "operationId": "getQuestionUsingGET",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MediaUploadcontrollrPayload" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/media/resumeUpload": {
      "post": {
        "tags": ["media-upload-controller"],
        "summary": "Resume upload",
        "description": "This method is use to upload resume in GCS",
        "operationId": "uploadPdfUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "resume",
            "in": "formData",
            "description": "resume",
            "required": true,
            "type": "file"
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "student_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "media_type",
            "in": "query",
            "description": "media_type",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MediaUploadcontrollrPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/media/vcount": {
      "post": {
        "tags": ["media-upload-controller"],
        "summary": "Count video",
        "description": "This method is use to count video in GCS",
        "operationId": "videoCountUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MediaUploadcontrollrPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/media/videoUpload": {
      "post": {
        "tags": ["media-upload-controller"],
        "summary": "Upload video",
        "description": "This method is use to upload video in GCS",
        "operationId": "uploadVideoUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "student_video",
            "in": "formData",
            "description": "student_video",
            "required": true,
            "type": "file"
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "student_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "quest_id",
            "in": "query",
            "description": "quest_id",
            "required": true,
            "type": "string"
          },
          {
            "name": "media_type",
            "in": "query",
            "description": "media_type",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/MediaUploadcontrollrPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/notification/getNotification": {
      "post": {
        "tags": ["mobile-notification-controller"],
        "summary": "Get notification",
        "operationId": "getNotificationsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MobileNotificationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/notification/saveNotification": {
      "post": {
        "tags": ["mobile-notification-controller"],
        "summary": "save notification",
        "operationId": "saveNotificationUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MobileNotificationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/notification/updateNotification": {
      "post": {
        "tags": ["mobile-notification-controller"],
        "summary": "update notification",
        "operationId": "updateNotificationFlagUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MobileNotificationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/offerletter": {
      "post": {
        "tags": ["offer-letter-controller"],
        "summary": "Offer latter list",
        "description": "This method is use to get offer latter list",
        "operationId": "offerLetterListUsingPOST",
        "consumes": ["application/json", "multipart/form-data", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/offerLatterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/offerletter/addTemplate": {
      "post": {
        "tags": ["offer-letter-controller"],
        "summary": "Add New template",
        "description": "This method is use to add new template",
        "operationId": "addOfferLetterTemplateUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "offerLetterTemplate",
            "in": "formData",
            "description": "offerLetterTemplate",
            "required": true,
            "type": "file"
          },
          {
            "name": "jobProfileId",
            "in": "query",
            "description": "jobProfileId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/offerLatterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/offerletter/generate": {
      "post": {
        "tags": ["offer-letter-controller"],
        "summary": "Generate offer letter",
        "description": "This method is use to generate new offer later",
        "operationId": "generateOfferLetterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/offerLatterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/offerletter/salary": {
      "post": {
        "tags": ["offer-letter-controller"],
        "summary": "Salary from assessment",
        "description": "This method is use to payroll the api for find salary from assessment",
        "operationId": "getOfferbyEmailUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/offerLatterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/offerletter/save": {
      "post": {
        "tags": ["offer-letter-controller"],
        "summary": "Save and send offeer latter",
        "description": "This method is use to save and send offer later",
        "operationId": "saveAndSendOfferLetterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/offerLatterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/offerletter/uploadsignedOL": {
      "post": {
        "tags": ["offer-letter-controller"],
        "summary": "Upload Signed Offer Letter",
        "description": "This method is use upload Signed Offer Letter",
        "operationId": "uploadSignedOfferLetterUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "signedOfferLetter",
            "in": "formData",
            "description": "signedOfferLetter",
            "required": true,
            "type": "file"
          },
          {
            "name": "offerLeterId",
            "in": "query",
            "description": "offerLeterId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "departmentId",
            "in": "query",
            "description": "departmentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "roleId",
            "in": "query",
            "description": "roleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "supervisorId",
            "in": "query",
            "description": "supervisorId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "countryCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "employeeType",
            "in": "query",
            "description": "employeeType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/offerLatterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/offerletter/view": {
      "post": {
        "tags": ["offer-letter-controller"],
        "summary": "View Offer Letter",
        "description": "This method is use to view Offer Letter",
        "operationId": "viewOfferLetterUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/offerLatterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/org/add": {
      "post": {
        "tags": ["organization-role-mapping-controller"],
        "summary": "Organization role mapping",
        "operationId": "organizationRoleMappingUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationRoleMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/org/byrole": {
      "post": {
        "tags": ["organization-role-mapping-controller"],
        "summary": "Get organization by role",
        "operationId": "getOrganizationsByRoleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationRoleMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgright/add": {
      "post": {
        "tags": ["organization-right-mapping-controller"],
        "summary": "add ",
        "operationId": "addUsingPOST_10",
        "consumes": ["application/json", "multipart/form-data", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationRightMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgright/orgs": {
      "post": {
        "tags": ["organization-right-mapping-controller"],
        "summary": "getOrganizations",
        "operationId": "getOrganizationsUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgright/rightbyorg": {
      "post": {
        "tags": ["organization-right-mapping-controller"],
        "summary": "get right by org ",
        "operationId": "getUsersByRoleUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrganizationRightMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgright/rights": {
      "post": {
        "tags": ["organization-right-mapping-controller"],
        "summary": "getRightsForMapping",
        "operationId": "getRightsForMappingUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgs": {
      "post": {
        "tags": ["organization-controller"],
        "summary": "list ",
        "operationId": "listUsingPOST_7",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OrganizationControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgs/add": {
      "post": {
        "tags": ["organization-controller"],
        "summary": "add ",
        "operationId": "uploadOrganizationUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "organization",
            "in": "formData",
            "description": "organization",
            "required": true,
            "type": "file"
          },
          {
            "name": "organizationName",
            "in": "query",
            "description": "organizationName",
            "required": true,
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "description": "active",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OrganizationControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgs/delete": {
      "post": {
        "tags": ["organization-controller"],
        "summary": "delete by id ",
        "operationId": "deleteUsingPOST_6",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OrganizationControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgs/get": {
      "post": {
        "tags": ["organization-controller"],
        "summary": "get by id ",
        "operationId": "getByIdUsingPOST_6",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OrganizationControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgs/getTestCode": {
      "post": {
        "tags": ["organization-controller"],
        "summary": "get Test Code ",
        "operationId": "getTestCodeByOrgIdUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OrganizationControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgs/update": {
      "post": {
        "tags": ["organization-controller"],
        "summary": "update by id ",
        "operationId": "updateUsingPOST_6",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "organization_data",
            "in": "formData",
            "description": "organization_data",
            "required": true,
            "type": "file"
          },
          {
            "name": "organizationName",
            "in": "query",
            "description": "organizationName",
            "required": true,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "organizationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "active",
            "in": "query",
            "description": "active",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OrganizationControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/orgs/updateTestCode": {
      "post": {
        "tags": ["organization-controller"],
        "summary": "update Test Code ",
        "operationId": "updateTestCodeUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OrganizationControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/prediction": {
      "post": {
        "tags": ["succcess-prediction-controller"],
        "summary": "Get success prediction",
        "description": "This method is use to get success preediction",
        "operationId": "getListUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SucccessPredictionControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/prediction/add": {
      "post": {
        "tags": ["succcess-prediction-controller"],
        "summary": "To create success prediction",
        "description": "This method is use to create new success prediction",
        "operationId": "addUsingPOST_17",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SucccessPredictionControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/prediction/byid": {
      "post": {
        "tags": ["succcess-prediction-controller"],
        "summary": "Get success prediction ",
        "description": "This method is use to get success prediction by id",
        "operationId": "getByIdUsingPOST_12",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SucccessPredictionControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/prediction/checkrule": {
      "post": {
        "tags": ["succcess-prediction-controller"],
        "summary": "Check rule",
        "description": "This method is use to check rule",
        "operationId": "checkruleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SucccessPredictionControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/prediction/delete": {
      "post": {
        "tags": ["succcess-prediction-controller"],
        "summary": "Delete success prediction",
        "description": "This method is use to delete existing success prediction",
        "operationId": "deleteUsingPOST_12",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SucccessPredictionControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/prediction/update": {
      "post": {
        "tags": ["succcess-prediction-controller"],
        "summary": "Update success prediction",
        "description": "This method is use to update success prediction",
        "operationId": "updateUsingPOST_11",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SucccessPredictionControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "Get question",
        "operationId": "listUsingPOST_8",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions/add": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "Add",
        "operationId": "addUsingPOST_11",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions/addSkillBuilder": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "Add for skill builder",
        "operationId": "addSkillBuilderUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions/delete": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "Delete question",
        "operationId": "deleteUsingPOST_7",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions/esave": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "excel save",
        "operationId": "excelSaveUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions/esaveforskill": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "excel save for skill",
        "operationId": "excelSaveForSkillUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions/get": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "Get by ID",
        "operationId": "getByIdUsingPOST_7",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions/getSkillBuilderQuest": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "Get list for skill builder",
        "operationId": "listForSkillBuilderUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions/update": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "update question",
        "operationId": "updateUsingPOST_7",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions/upload": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "upload excel file data",
        "operationId": "uploadExcelFileDataUsingPOST_1",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "organizationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "questionTypeId",
            "in": "query",
            "description": "questionTypeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/questions/uploadSkillBuilder": {
      "post": {
        "tags": ["question-master-controller"],
        "summary": "upload excel file data for skill",
        "operationId": "uploadExcelFileDataForSkillUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          },
          {
            "name": "organizationId",
            "in": "query",
            "description": "organizationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "section",
            "in": "query",
            "description": "section",
            "required": true,
            "type": "string"
          },
          {
            "name": "subSection",
            "in": "query",
            "description": "subSection",
            "required": true,
            "type": "string"
          },
          {
            "name": "topic",
            "in": "query",
            "description": "topic",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QuestionMasterControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/all": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "All assessment list",
        "operationId": "allAssessmentListUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RCAssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/delete": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "Delete",
        "operationId": "deleteUsingPOST_8",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RCAssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/deleteSkillBuilderAssessment": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "Delete skill builder assessment",
        "operationId": "deleteSkillBuilderAssessmentUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RCAssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/get": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "Get by ID",
        "operationId": "getByIdUsingPOST_8",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RCAssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/getSkillAssForUpdate": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "Get by Id for skill builder",
        "operationId": "getByIdForSkillBuilderUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RCAssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/getTopicsForRanAssess": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "Get topic for random assessment",
        "operationId": "getTopicsForRanAssessUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RCAssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/questions": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "Get questions for assessment",
        "operationId": "getQuestionsForAssessmentUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RCAssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/saveRanAssess": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "Save Random Assessment",
        "operationId": "saveRanAssessUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RCAssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/skillBuilderAllList": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "allSkillBuilderList",
        "operationId": "allSkillBuilderListUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/skillBuilderCourse": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "Save skill builder course",
        "operationId": "saveSkillBuilderUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RCAssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rcassessments/updateRanAssess": {
      "post": {
        "tags": ["rc-assessment-creation-controller"],
        "summary": "Save Random Assessment",
        "operationId": "updateRanAssessUsingPOST_1",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RCAssessmentCreationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rights": {
      "post": {
        "tags": ["right-master-controller"],
        "summary": "All right master list",
        "operationId": "listUsingPOST_9",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RightMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rights/add": {
      "post": {
        "tags": ["right-master-controller"],
        "summary": "Add right",
        "operationId": "addUsingPOST_12",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RightMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rights/delete": {
      "post": {
        "tags": ["right-master-controller"],
        "summary": "delete right",
        "operationId": "deleteUsingPOST_9",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RightMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rights/get": {
      "post": {
        "tags": ["right-master-controller"],
        "summary": "Get by id",
        "operationId": "getByIdUsingPOST_9",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RightMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rights/modules": {
      "post": {
        "tags": ["right-master-controller"],
        "summary": "rightModuleList",
        "operationId": "rightModuleListUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/rights/update": {
      "post": {
        "tags": ["right-master-controller"],
        "summary": "update right",
        "operationId": "updateUsingPOST_8",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RightMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/roleright/add": {
      "post": {
        "tags": ["role-right-mapping-controller"],
        "summary": "add role",
        "operationId": "addUsingPOST_14",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleRightMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/roles": {
      "post": {
        "tags": ["role-master-controller"],
        "summary": "role list",
        "operationId": "listUsingPOST_10",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RoleMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/roles/add": {
      "post": {
        "tags": ["role-master-controller"],
        "summary": "add role",
        "operationId": "addUsingPOST_13",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RoleMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/roles/delete": {
      "post": {
        "tags": ["role-master-controller"],
        "summary": "role delete",
        "operationId": "deleteUsingPOST_10",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RoleMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/roles/get": {
      "post": {
        "tags": ["role-master-controller"],
        "summary": "get role",
        "operationId": "getByIdUsingPOST_10",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RoleMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/roles/roletypes": {
      "post": {
        "tags": ["role-master-controller"],
        "summary": "Get role type",
        "operationId": "getRoleTypesUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RoleMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/roles/update": {
      "post": {
        "tags": ["role-master-controller"],
        "summary": "role update",
        "operationId": "updateUsingPOST_9",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RoleMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/schlrshp": {
      "post": {
        "tags": ["student-scholarship-controller"],
        "summary": "List of student scholarship",
        "description": "This method is use to get list of student scholarship",
        "operationId": "listofScholarshipUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentScholarshipControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/schlrshp/add": {
      "post": {
        "tags": ["student-scholarship-controller"],
        "summary": "Create student scholarship",
        "description": "This method is use to add student scholarship",
        "operationId": "addUsingPOST_15",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentScholarshipControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/schlrshp/delete": {
      "post": {
        "tags": ["student-scholarship-controller"],
        "summary": "Delete student scholarship",
        "description": "This method is use to delete student scholarship",
        "operationId": "deleteUsingPOST_11",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentScholarshipControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/schlrshp/get": {
      "post": {
        "tags": ["student-scholarship-controller"],
        "summary": "Get student scholarship",
        "description": "This method is use to get student scholarship",
        "operationId": "getByIdUsingPOST_11",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentScholarshipControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/schlrshp/update": {
      "post": {
        "tags": ["student-scholarship-controller"],
        "summary": "Update details",
        "description": "This method is use to update student scholarship",
        "operationId": "updateUsingPOST_10",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentScholarshipControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/skillbuilderapi/learningassociates": {
      "post": {
        "tags": ["skill-builder-apis-controller"],
        "summary": "getAssociateDetailsForLearning",
        "operationId": "getAssociateDetailsForLearningUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/addproject": {
      "post": {
        "tags": ["sonar-quality-profile-controller"],
        "summary": "Add profile ",
        "operationId": "addProjectWithProfileUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityProfileControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/chngparent": {
      "post": {
        "tags": ["sonar-quality-profile-controller"],
        "summary": "Change parent",
        "operationId": "changeParentUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityProfileControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/langlist": {
      "post": {
        "tags": ["sonar-quality-profile-controller"],
        "summary": "languageListForDropdown",
        "operationId": "languageListForDropdownUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/profiles": {
      "post": {
        "tags": ["sonar-quality-profile-controller"],
        "summary": "findProfiles",
        "operationId": "findProfilesUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/projectlist": {
      "post": {
        "tags": ["sonar-quality-profile-controller"],
        "summary": "Display project list with profile",
        "operationId": "projectListWithProfileUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityProfileControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/qadd": {
      "post": {
        "tags": ["sonar-quality-profile-controller"],
        "summary": "Add new profile",
        "description": "This method is use to add  new profle",
        "operationId": "profilesUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityProfileControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/qdefault": {
      "post": {
        "tags": ["sonar-quality-profile-controller"],
        "summary": "default profile",
        "description": "This is use to default  profile",
        "operationId": "defaultProfileUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityProfileControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/qdelete": {
      "post": {
        "tags": ["sonar-quality-profile-controller"],
        "summary": "Delete profile",
        "description": "This method is use to delete the user profile",
        "operationId": "deleteProfileUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityProfileControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/qupdate": {
      "post": {
        "tags": ["sonar-quality-profile-controller"],
        "summary": "Update profile",
        "description": "This method is use to update the  profile",
        "operationId": "updateProfileUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityProfileControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/rmvproject": {
      "post": {
        "tags": ["sonar-quality-profile-controller"],
        "summary": "Remove profile from project",
        "description": "This method is use to remove the profile from project",
        "operationId": "removeProjectFromProfileUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityProfileControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/rules/actrule": {
      "post": {
        "tags": ["sonar-quality-rules-controller"],
        "summary": "Active rules",
        "operationId": "activateRuleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityRulesControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/rules/add": {
      "post": {
        "tags": ["sonar-quality-rules-controller"],
        "summary": "Add new profile rule",
        "operationId": "profileRuleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityRulesControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/rules/bulkadd": {
      "post": {
        "tags": ["sonar-quality-rules-controller"],
        "summary": "Bulk profile rule",
        "operationId": "bulkProfileRuleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityRulesControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/rules/bulkdelete": {
      "post": {
        "tags": ["sonar-quality-rules-controller"],
        "summary": "Delete bulk rule",
        "operationId": "deleteBulkRuleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityRulesControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/rules/deactrule": {
      "post": {
        "tags": ["sonar-quality-rules-controller"],
        "summary": "Deactive Rule",
        "operationId": "deactivateRuleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityRulesControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/rules/delete": {
      "post": {
        "tags": ["sonar-quality-rules-controller"],
        "summary": "Delete rule",
        "operationId": "deleteRuleUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityRulesControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonar/rules/findbykey": {
      "post": {
        "tags": ["sonar-quality-rules-controller"],
        "summary": "Active rules by profile key",
        "operationId": "findActiveRulesByProfileKeyUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SonarQualityRulesControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonarproject": {
      "post": {
        "tags": ["sonar-project-controller"],
        "summary": "findProjects",
        "operationId": "findProjectsUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonarproject/add": {
      "post": {
        "tags": ["sonar-project-controller"],
        "summary": "Add project",
        "operationId": "addProjectUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SonarProjectControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonarproject/delete": {
      "post": {
        "tags": ["sonar-project-controller"],
        "summary": "update project",
        "operationId": "deleteProjectUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SonarProjectControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/sonarproject/update": {
      "post": {
        "tags": ["sonar-project-controller"],
        "summary": "update project",
        "operationId": "updateProjectUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SonarProjectControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/spztion": {
      "post": {
        "tags": ["user-specialization-controller"],
        "summary": "User specialization",
        "description": "This method is use to user specialization",
        "operationId": "listUsingPOST_13",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserSpecializationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/spztion/add": {
      "post": {
        "tags": ["user-specialization-controller"],
        "summary": "Create new user specialization",
        "description": "This method is use to create new user specialization",
        "operationId": "addUsingPOST_21",
        "consumes": ["application/json", "multipart/form-data", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserSpecializationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/spztion/delete": {
      "post": {
        "tags": ["user-specialization-controller"],
        "summary": "Delete user",
        "description": "This method is use to delete user",
        "operationId": "deleteUsingPOST_15",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserSpecializationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/spztion/get": {
      "post": {
        "tags": ["user-specialization-controller"],
        "summary": "Get user specialization",
        "description": "This method is use to get user specialization",
        "operationId": "getByIdUsingPOST_15",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserSpecializationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/spztion/update": {
      "post": {
        "tags": ["user-specialization-controller"],
        "summary": "Update user",
        "description": "This method is use to update user ",
        "operationId": "updateUsingPOST_14",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserSpecializationControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/stdntschlrshp/add": {
      "post": {
        "tags": ["student-scholarship-mapping-controller"],
        "summary": "New student scholarship",
        "operationId": "addUsingPOST_16",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentScholarshipMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/takeassessments/assbylearningjrny": {
      "post": {
        "tags": ["taking-assessment-controller"],
        "summary": "Get skill builder assessment by learning journey",
        "operationId": "getSkillBuilderAssByLrngJourneyUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TakingAssessmentControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/takeassessments/assessment": {
      "post": {
        "tags": ["taking-assessment-controller"],
        "summary": "Get assessment",
        "operationId": "getAssessmentUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TakingAssessmentControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/takeassessments/getresult": {
      "post": {
        "tags": ["taking-assessment-controller"],
        "summary": "Get result",
        "operationId": "findResultUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TakingAssessmentControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/takeassessments/result": {
      "post": {
        "tags": ["taking-assessment-controller"],
        "summary": "Assessment result",
        "operationId": "assessmentResultUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TakingAssessmentControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/takeassessments/save": {
      "post": {
        "tags": ["taking-assessment-controller"],
        "summary": "Save assessment",
        "operationId": "saveAssessmentUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TakingAssessmentControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/takeassessments/save_ans_details": {
      "post": {
        "tags": ["taking-assessment-controller"],
        "summary": "saveAnswerDetails",
        "operationId": "saveAnswerDetailsUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/takeassessments/settimer": {
      "post": {
        "tags": ["taking-assessment-controller"],
        "summary": "Set timer",
        "operationId": "setTimerUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TakingAssessmentControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/takeassessments/skillassessment": {
      "post": {
        "tags": ["taking-assessment-controller"],
        "summary": "Get skill builder assessment",
        "operationId": "getSkillBuilderAssessmentUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TakingAssessmentControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/takeassessments/skillbuilderass": {
      "post": {
        "tags": ["taking-assessment-controller"],
        "summary": "Get skill builder assessment",
        "operationId": "getSkillBuilderAssessmentsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TakingAssessmentControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/takeassessments/skillsave": {
      "post": {
        "tags": ["taking-assessment-controller"],
        "summary": "Save skill builder assessment",
        "operationId": "saveSkillBuilderAssessmentUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TakingAssessmentControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/techadmin/cardsdata": {
      "post": {
        "tags": ["technology-admin-controller"],
        "summary": "Topic card data",
        "operationId": "topCardsDatatechAdminUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TechnologyAdminControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/techadmin/quesdiffwise": {
      "post": {
        "tags": ["technology-admin-controller"],
        "summary": "question diff wise",
        "operationId": "questionsDiffWiseUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TechnologyAdminControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/topics": {
      "post": {
        "tags": ["topic-master-controller"],
        "summary": "To check topic is exists",
        "description": "This method is use to check topic",
        "operationId": "listUsingPOST_11",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TopicMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/topics/add": {
      "post": {
        "tags": ["topic-master-controller"],
        "summary": "Add new topic",
        "description": "This method is use to add new topic ",
        "operationId": "addUsingPOST_18",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TopicMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/topics/delete": {
      "post": {
        "tags": ["topic-master-controller"],
        "summary": "To delete topic details",
        "description": "This method is use to delete topic details",
        "operationId": "deleteUsingPOST_13",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TopicMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/topics/get": {
      "post": {
        "tags": ["topic-master-controller"],
        "summary": "Get topic details",
        "description": "This method is use to get topic details ",
        "operationId": "getByIdUsingPOST_13",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TopicMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/topics/update": {
      "post": {
        "tags": ["topic-master-controller"],
        "summary": "Update topic details",
        "description": "This method is use to update topic details",
        "operationId": "updateUsingPOST_12",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TopicMasterControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": ["user-controller"],
        "summary": "User me",
        "operationId": "getCurrentUserUsingGET",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "token",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgName",
            "in": "query",
            "description": "orgName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserControllerPayload" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/user/meios": {
      "get": {
        "tags": ["user-controller"],
        "summary": "Get current user",
        "operationId": "getCurrentUserForIosUsingGET",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "token",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgName",
            "in": "header",
            "description": "orgName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserControllerPayload" }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/user/userbyrole": {
      "post": {
        "tags": ["findUserByRole"],
        "summary": "Get user by role ",
        "operationId": "findUserByRoleUsingPOST",
        "consumes": ["text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserControllerPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/userrole/add": {
      "post": {
        "tags": ["user-role-mapping-controller"],
        "summary": "Create new user role",
        "description": "This method is use to create new role",
        "operationId": "addUsingPOST_20",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserRoleMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/userrole/adduser": {
      "post": {
        "tags": ["user-role-mapping-controller"],
        "summary": "Add user",
        "description": "This method is use to add user",
        "operationId": "addUserUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserRoleMappingControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "Get all users",
        "operationId": "listUsingPOST_12",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/add": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "Add user",
        "operationId": "addUsingPOST_19",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/allDetails": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "all user details",
        "operationId": "allUserDetailsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/batches": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "User batches",
        "operationId": "userBatchesUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/bulkaddemp": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "save bulk employees",
        "operationId": "saveBulkEmployeesUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/delete": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "delete user",
        "operationId": "deleteUsingPOST_14",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/details": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "user details",
        "operationId": "getUserDetailsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/esave": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "excel save",
        "operationId": "excelSaveUsingPOST_2",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/get": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "Get by ID",
        "operationId": "getByIdUsingPOST_14",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/getByEmail": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "get user by email",
        "operationId": "userUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/getSkills": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "getUserSkills",
        "operationId": "getUserSkillsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/getproject": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "getUserProject",
        "operationId": "getUserProjectUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/saveEmployee": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "Save Employee Details",
        "operationId": "saveEmployeeDetailsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/saveproject": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "saveUserProject",
        "operationId": "saveUserProjectUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/saveskills": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "saveUserSkills",
        "operationId": "saveUserSkillsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/selectedCand": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "getSelectedCandidates",
        "operationId": "getSelectedCandidatesUsingPOST",
        "consumes": ["application/json"],
        "produces": ["*/*"],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/update": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "Update user",
        "operationId": "updateUsingPOST_13",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/updateUserEmpId": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "Update user",
        "operationId": "updateUserUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "mp",
            "description": "mp",
            "required": true,
            "schema": { "type": "object" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/updatedetails": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "user details",
        "operationId": "updateUserDetailsUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/updateprofile": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "user details",
        "operationId": "updateUserProfileUsingPOST",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "photoData",
            "in": "formData",
            "description": "photoData",
            "required": true,
            "type": "file"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "name": "email_id",
            "in": "query",
            "description": "email_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/users/upload": {
      "post": {
        "tags": ["user-master-controller"],
        "summary": "Upload excel file",
        "operationId": "uploadExcelFileDataUsingPOST_2",
        "consumes": ["multipart/form-data"],
        "produces": ["*/*"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UserMasterPayload" }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/validate/add": {
      "post": {
        "tags": ["student-validate-controller"],
        "summary": "New student validate",
        "description": "This method is use to validate new student",
        "operationId": "saveStudentValidateUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentValidateControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    },
    "/validate/student": {
      "post": {
        "tags": ["student-validate-controller"],
        "summary": "Student validate",
        "description": "This method is use to validate student",
        "operationId": "getStudentValidateByEmailUsingPOST",
        "consumes": ["application/json", "text/plain"],
        "produces": ["*/*"],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "data",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StudentValidateControllerPayload"
            }
          },
          "201": { "description": "Created" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        }
      }
    }
  },
  "definitions": {
    "Locale": {
      "type": "object",
      "properties": {
        "country": { "type": "string" },
        "displayCountry": { "type": "string" },
        "displayLanguage": { "type": "string" },
        "displayName": { "type": "string" },
        "displayScript": { "type": "string" },
        "displayVariant": { "type": "string" },
        "extensionKeys": {
          "type": "array",
          "items": { "$ref": "#/definitions/Character" }
        },
        "iso3Country": { "type": "string" },
        "iso3Language": { "type": "string" },
        "language": { "type": "string" },
        "script": { "type": "string" },
        "unicodeLocaleAttributes": {
          "type": "array",
          "items": { "type": "string" }
        },
        "unicodeLocaleKeys": { "type": "array", "items": { "type": "string" } },
        "variant": { "type": "string" }
      }
    },
    "BatchAssociateMappingControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'batch_id' :0 , 'associates' : ''}",
          "description": "batchassoci/add"
        }
      }
    },
    "UpcomingEventsUploadControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'image' : '' , 'event_desc' : '' , 'event_date' : 'DD/MM/YYYY' ,'active' : 'y' , 'organizationId' : 0 }",
          "description": "comingevents/add"
        },
        "delete": {
          "type": "string",
          "example": "{ 'id' : 0 }",
          "description": "comingevents/delete"
        },
        "getImg": {
          "type": "string",
          "example": "{'organizationId' : 0}",
          "description": "comingevents/getImg"
        },
        "getImgById": {
          "type": "string",
          "example": "{'id' : 0}",
          "description": "comingevents/getImgById"
        },
        "update": {
          "type": "string",
          "example": "{'eventdata' : { 'event_desc' : '', 'event_end_date' : 'DD/MM/YYYY' , 'active' : 'Y' , 'fileName' : '' , 'fileType' : '' , 'url' : '' ,'organizationId' : 0 }}",
          "description": "comingevents/update"
        }
      }
    },
    "BatchInstructorMappingControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'batch_id':0,'add':'string','remove':'string'}",
          "description": "batchinstructor/add"
        }
      }
    },
    "SonarQualityProfileControllerPayload": {
      "type": "object",
      "properties": {
        "addproject": {
          "type": "string",
          "example": "{'language' :'' ,'projectKey' : '' ,'profilename' : ''}",
          "description": "sonar/addproject"
        },
        "chngparent": {
          "type": "string",
          "example": "{'language' : '' , 'profilename' : '','parentname' :''}",
          "description": "sonar/chngparent"
        },
        "projectlist": {
          "type": "string",
          "example": "{'profilekey' :'' }",
          "description": "sonar/projectlist"
        },
        "qadd": {
          "type": "string",
          "example": "{'language' :'' ,'profilename' : '' }",
          "description": "sonar/qadd"
        },
        "qdefault": {
          "type": "string",
          "example": "{'language' : '' , 'profilename' : ''}",
          "description": "sonar/qdefault"
        },
        "qdelete": {
          "type": "string",
          "example": "{'language' :'' ,'profilename' : '' }",
          "description": "sonar/qdelete"
        },
        "qupdate": {
          "type": "string",
          "example": "{'key' : '' , 'profilename' : ''}",
          "description": "sonar/qupdate"
        },
        "rmvproject": {
          "type": "string",
          "example": "{'language' :'' ,'projectKey' : '' ,'profilename' : ''}",
          "description": "sonar/rmvproject"
        }
      }
    },
    "EventMasterControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'eventdata':{'event_start_date':'date','event_end_date':'date','event_name':'string','active':'string','organizationId':0}}",
          "description": "events/add"
        },
        "delete": {
          "type": "string",
          "example": "{'id' :0}",
          "description": "events/delete"
        },
        "events": {
          "type": "string",
          "example": "{'organizationId' :0}",
          "description": "events"
        },
        "get": {
          "type": "string",
          "example": "{'id' :0}",
          "description": "events/get"
        },
        "update": {
          "type": "string",
          "example": "{'id':0,'eventdata':{'event_start_date':'date','event_end_date':'date','event_name':'string','active':'string','organizationId':0}}",
          "description": "events/update"
        }
      }
    },
    "RecruiterDashboardControllerPayload": {
      "type": "object",
      "properties": {
        "allStudent": {
          "type": "string",
          "example": "{'recruiterEmail':'string','organizationId':0,'jobProfile':'string'}",
          "description": "dashboard/allStudent"
        },
        "allstdntdetails": {
          "type": "string",
          "example": "{'organizationId': 0,'pageNo': 0,'pageSize':'string','job_portal_id':0}",
          "description": "dashboard/allstdntdetails"
        },
        "asscompltd": {
          "type": "string",
          "example": "{'organization_id':0,'jobProfile':'string'}",
          "description": "dashboard/asscompltd"
        },
        "asscompltdexcel": {
          "type": "string",
          "example": "{'organization_id':0,'jobProfile':'string'}",
          "description": "dashboard/asscompltdexcel"
        },
        "assignintvwr": {
          "type": "string",
          "example": "{'no_of_round':0,'round_1':0,'round_2':0,'round_3':0,'interviewer_email1':'string','interviewer_email2':'string','interviewer_email3':'string','job_portal_id':0,'assignDate1':0,'assignDate2':0,'assignDate3':0,'passing_percentage1':0,'passing_percentage2':0,'passing_percentage3':0,'organizationId':0}",
          "description": "dashboard/assignintvwr"
        },
        "asstostage1": {
          "type": "string",
          "example": "{'list':'string','organizationId':0}",
          "description": "dashboard/asstostage1"
        },
        "comments": {
          "type": "string",
          "example": "{'comment':'string','email':'string','student_id':0}",
          "description": "dashboard/comments"
        },
        "detailsbyid": {
          "type": "string",
          "example": "{'student_id': 0,'organization_id':0}",
          "description": "dashboard/detailsbyid"
        },
        "followup": {
          "type": "string",
          "example": "{'student_id': 0,'email':'string','follow_up':'string'}",
          "description": "dashboard/followup"
        },
        "followupstdnts": {
          "type": "string",
          "example": "{'organizationId':0,'email':'string','job_portal_id':0}",
          "description": "dashboard/followupstdnts"
        },
        "recJobProfiles": {
          "type": "string",
          "example": "{'organizationId':0,'email':'string'}",
          "description": "dashboard/recJobProfiles"
        },
        "recManJobProfiles": {
          "type": "string",
          "example": "{'organizationId':0}",
          "description": "dashboard/recManJobProfiles"
        },
        "recallavgscorefilter": {
          "type": "string",
          "example": "{'jobId':0,'email':'string','organizationId':0}",
          "description": "dashboard/recallavgscorefilter"
        },
        "recallstdnts": {
          "type": "string",
          "example": "{'recruiterEmail': 'string'}",
          "description": "dashboard/recallstdnts"
        },
        "recavgscores": {
          "type": "string",
          "example": "{'email':'string','organizationId':0}",
          "description": "dashboard/recavgscores"
        },
        "recdash": {
          "type": "string",
          "example": "{'jobId':0, 'organizationId':0,'email':'string'}",
          "description": "dashboard/recdash"
        },
        "recemails": {
          "type": "string",
          "example": "{'organizationId':0,'email':'string'}",
          "description": "dashboard/recemails"
        },
        "recleaderboardfilter": {
          "type": "string",
          "example": "{'jobId':0,'email':'string','organizationId':0}",
          "description": "dashboard/recleaderboardfilter"
        },
        "recmandashfilter": {
          "type": "string",
          "example": "{'jobId':0,'email':'string','organizationId':0}",
          "description": "dashboard/recmandashfilter"
        },
        "recmonthrepfilter": {
          "type": "string",
          "example": "{'jobId':0,'organizationId':0,'email':'string'}",
          "description": "dashboard/recmonthrepfilter"
        },
        "recruionedash": {
          "type": "string",
          "example": "{'email':'string','organizationId':0}",
          "description": "dashboard/recruionedash"
        },
        "recruitermanager": {
          "type": "string",
          "example": "{'organizationId':0}",
          "description": "dashboard/recruitermanager"
        },
        "rectopcardfilter": {
          "type": "string",
          "example": "{'jobId':0,'email':'string','organizationId':0}",
          "description": "dashboard/rectopcardfilter"
        },
        "stdntExcelData": {
          "type": "string",
          "example": "{'organizationId': 0,'jobProfile':'string'}",
          "description": "dashboard/stdntExcelData"
        },
        "stdntalldetails": {
          "type": "string",
          "example": "{'student_id': 0,'organization_id':0,'email':'string','stage':'string','jobPortalId':0}",
          "description": "dashboard/stdntalldetails"
        },
        "stdntcomments": {
          "type": "string",
          "example": "{'student_id':0}",
          "description": "dashboard/stdntcomments"
        },
        "stdntdetails": {
          "type": "string",
          "example": "{'organizationId': 0,'jobProfile':'string'}",
          "description": "dashboard/stdntdetails"
        },
        "stdntdetailsweb": {
          "type": "string",
          "example": "{'organizationId': 0,'jobProfile':'string'}",
          "description": "dashboard/stdntdetailsweb"
        },
        "topdata": {
          "type": "string",
          "example": "{'organizationId':0,'email':'string','job_portal_id':0}",
          "description": "dashboard/topdata"
        }
      }
    },
    "OrganizationRoleMappingControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'organizationId' : 1,'add':'string','remove':'string'}",
          "description": "org/add"
        },
        "byrole": {
          "type": "string",
          "example": "{'organizationId': 1}",
          "description": "org/byrole"
        }
      }
    },
    "CandidateMasterControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'testdata' :{'subject':'string','message':'string','data':'','via':'string'}}",
          "description": "candidate/add"
        },
        "bulkmail": {
          "type": "string",
          "example": "{'name':'string','initiator':'string','data':'','subject':'string','message':'string','email':'string','sender':'string','organizationId':0,'via':'string'}",
          "description": "candidate/bulkmail"
        },
        "esave": {
          "type": "string",
          "example": "{'data':'','sender':'string','test_start_date':date,'test_end_date':date,'organizationId':0,'template1':'string','template2':'string','subject':'string','via':'string'}",
          "description": "candidate/esave"
        },
        "mailsend": {
          "type": "string",
          "example": "{'user_id':'0'}",
          "description": "candidate/mailsend"
        },
        "sendmail": {
          "type": "string",
          "example": "{'name':'string','initiator':'string','email':'string','subject':'string','message':'string','sender':'string','organizationId':0,'via':'string'}",
          "description": "candidate/sendmail"
        },
        "stdntemail": {
          "type": "string",
          "example": "{'student_id':'0'}",
          "description": "candidate/stdntemail"
        },
        "upload": {
          "type": "string",
          "example": "{'file':''}",
          "description": "candidate/upload"
        }
      }
    },
    "RCAssessmentCreationControllerPayload": {
      "type": "object",
      "properties": {
        "all": {
          "type": "string",
          "example": "{'organizationId': 0}",
          "description": "rcassessments/all"
        },
        "delete": {
          "type": "string",
          "example": "{'id': 0}",
          "description": "rcassessments/delete"
        },
        "deleteSkillBuilderAssessment": {
          "type": "string",
          "example": "{'id': 0}",
          "description": "rcassessments/deleteSkillBuilderAssessment"
        },
        "get": {
          "type": "string",
          "example": "{'creation_type': 'string','id':0}",
          "description": "rcassessments/get"
        },
        "getSkillAssForUpdate": {
          "type": "string",
          "example": "{'id':0}",
          "description": "rcassessments/getSkillAssForUpdate"
        },
        "getTopicsForRanAssess": {
          "type": "string",
          "example": "{'language_id': 0,'difficulty_id':0}",
          "description": "rcassessments/getTopicsForRanAssess"
        },
        "questions": {
          "type": "string",
          "example": "{'course':'string','section':'string','subsection':'string','active':'string'}",
          "description": "rcassessments/questions"
        },
        "saveRanAssess": {
          "type": "string",
          "example": "{'organizationId': 0,'rcassessment_desc':'string'}",
          "description": "rcassessments/saveRanAssess"
        },
        "skillBuilderCourse": {
          "type": "string",
          "example": "{'assessmentdata':{'questions':0,'section':'string','subSectionList':'string','courseName':'string','skillAssessmentDesc':'string','instructions':'string','active':'string','learningJourney':'string'}}",
          "description": "rcassessments/skillBuilderCourse"
        },
        "updateRanAssess": {
          "type": "string",
          "example": "{'rcassessment_id': 0,'language_id':0,'difficulty_id':0,'codingmarks_id':0,'rcassessment_desc':'string','time':0,'creation_type':'string','jobportal_id':0,'active':'string','randomTopics':''}",
          "description": "rcassessments/updateRanAssess"
        }
      }
    },
    "AssessmentCreationControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'assessmentdata':{'questions':'','language_id':0 , 'topic_id': 0 , 'difficulty_id': 0 , 'codingmarks_id' :0 , 'assessment_desc': 'Test' , 'event_id' : 0 ,'batch_id':0  ,'instructions':'data', 'time':'','creation_type':'','active':a ,'organizationId':0 }}",
          "description": "/assessments/add"
        },
        "all": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "/assessments/all"
        },
        "delete": {
          "type": "string",
          "example": "{'id':0 }",
          "description": "/assessments/delete"
        },
        "get": {
          "type": "string",
          "example": "{'id':0 , 'creation_type': '' }",
          "description": "/assessments/get"
        },
        "getTopicsForRanAssess": {
          "type": "string",
          "example": "{'language_id': 0 , 'difficulty_id' : 0 ,'organizationId': 0}",
          "description": "/assessments/getTopicsForRanAssess"
        },
        "questions": {
          "type": "string",
          "example": "{'topic_id':0,'language_id': 0 , 'difficulty_id' : 0 ,'organizationId': 0}",
          "description": "/assessments/questions"
        },
        "quizForStudent": {
          "type": "string",
          "example": "{'id' : 1}",
          "description": "/assessments/quizForStudent"
        },
        "saveRanAssess": {
          "type": "string",
          "example": "{'language_id':0 , 'difficulty_id': 0 , 'codingmarks_id' :0 , 'assessment_desc': 'Test' , 'event_id' : 0 ,'batch_id':0  ,'instructions':'data', 'time':'','creation_type':'','active':a ,'organizationId':0 , 'randomTopics':'Topic'}",
          "description": "/assessments/saveRanAssess"
        },
        "update": {
          "type": "string",
          "example": "{'assessmentdata':{'questions':'','language_id':0 , 'topic_id': 0 , 'difficulty_id': 0 , 'codingmarks_id' :0 , 'assessment_desc': 'Test' , 'event_id' : 0 ,'batch_id':0  ,'instructions':'data', 'time':'','active':a ,'organizationId':0 ,'id':0}}",
          "description": "/assessments/update"
        },
        "updateRanAssess": {
          "type": "string",
          "example": "{'language_id':0 , 'difficulty_id': 0 , 'codingmarks_id' :0 , 'assessment_desc': 'Test' , 'event_id' : 0 ,'batch_id':0  ,'instructions':'data', 'time':'','creation_type':'','active':a ,'organizationId':0 , 'randomTopics':'Topic'}",
          "description": "/assessments/updateRanAssess"
        },
        "verifyCode": {
          "type": "string",
          "example": "{'user_code' : 'A1B2C3D4'}",
          "description": "/assessments/verifyCode"
        }
      }
    },
    "QuestionMasterControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'questionmasterdata':{'options_list':'string','language_id':0,'topic_id':0,'difficulty_id':0,'question_type_id':0,'question_desc':'string','active':'string','organizationId':0,'no_of_answer':0,'testCases':'string','codingTemplate':'string','expectedOutput':'string'}}",
          "description": "questions/add"
        },
        "addSkillBuilder": {
          "type": "string",
          "example": "{'questionmasterdata':{'options_list':'string','course':'string','sub_course':'string','topic':'string','question_type_id':0,'question_desc':'string','active':'string','organizationId':0,'no_of_answer':0,'paramValue':'string','expectedOutput':'string'}}",
          "description": "questions/addSkillBuilder"
        },
        "delete": {
          "type": "string",
          "example": "{'id':0}",
          "description": "questions/delete"
        },
        "esave": {
          "type": "string",
          "example": "{'data':'string','organizationId' : 1}",
          "description": "questions/esave"
        },
        "esaveforskill": {
          "type": "string",
          "example": "{'data':'string','organizationId' : 1}",
          "description": "questions/esaveforskill"
        },
        "get": {
          "type": "string",
          "example": "{'questionTypeId':0,'id':0}",
          "description": "questions/get"
        },
        "getSkillBuilderQuest": {
          "type": "string",
          "example": "{'course':'string','sub_course' : 'string','topic':'string','organizationId':0}",
          "description": "questions/getSkillBuilderQuest"
        },
        "questions": {
          "type": "string",
          "example": "{'language_id':0,'topic_id' : 0,'difficulty_id':0,'organizationId':0}",
          "description": "questions"
        },
        "update": {
          "type": "string",
          "example": "{'questionmasterdata':'string','id':0}",
          "description": "questions/update"
        },
        "upload": {
          "type": "string",
          "example": "{'file':'','organizationId' : 1,'questionTypeId':0}",
          "description": "questions/upload"
        },
        "uploadSkillBuilder": {
          "type": "string",
          "example": "{'file':'','organizationId' : 1,'section':'string','subSection':'string','topic':'string'}",
          "description": "questions/uploadSkillBuilder"
        }
      }
    },
    "SonarProjectControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'oldKey':0,'projectName' : 'string','projectKey':0,'visibility':''}",
          "description": "sonarproject/add"
        },
        "delete": {
          "type": "string",
          "example": "{'projectKey' : 0}",
          "description": "sonarproject/delete"
        },
        "update": {
          "type": "string",
          "example": "{'visibility' : 'string','oldKey':0,'projectKey':0,'projectName' : 'string'}",
          "description": "sonarproject/update"
        }
      }
    },
    "CustomAuthContollerPayload": {
      "type": "object",
      "properties": {
        "crt": {
          "type": "string",
          "example": "{'organizationName' : 'string','requestType':'string','name':'string','lastName':'string','email':'string','mobileNo':0,'password':0,'mobileCode':0}",
          "description": "cstmauth/signup"
        },
        "feedback": {
          "type": "string",
          "example": "{'email':'string', 'message':'string','organizationId':0}",
          "description": "cstmauth/feedback"
        },
        "frgtpwd": {
          "type": "string",
          "example": "{'email':'string','password':0}",
          "description": "cstmauth/frgtpwd"
        },
        "message": {
          "type": "string",
          "example": "{'email':'string', 'message':'string','organizationId':0,'mobile_no':0,'code':0}",
          "description": "cstmauth/message"
        },
        "sendotp": {
          "type": "string",
          "example": "{'mobileNo' : 0}",
          "description": "cstmauth/sendotp"
        },
        "signin": {
          "type": "string",
          "example": "{'organizationName' : 'string','email':'string','password':0,'fcm_id':0}",
          "description": "cstmauth/signin"
        },
        "verifymail": {
          "type": "string",
          "example": "{'email':'string', 'organizationName':'string'}",
          "description": "cstmauth/verifymail"
        },
        "verifymob": {
          "type": "string",
          "example": "{'organizationName':'string','mobileNo':0,'code':0}",
          "description": "cstmauth/verifymob"
        },
        "verifyotp": {
          "type": "string",
          "example": "{'otpNo':0}",
          "description": "cstmauth/verifyotp"
        }
      }
    },
    "SonarQualityRulesControllerPayload": {
      "type": "object",
      "properties": {
        "actrule": {
          "type": "string",
          "example": "{'profilekey' :'' ,'ruleKey' : '' , 'severity' :'' }",
          "description": "/sonar/rules/actrule"
        },
        "add": {
          "type": "string",
          "example": "{'custom_key' : '' , 'rule_desc' : ''  , 'rule_name' :'' , 'template_key' : '',rule_severity' :'' , 'rule_type' :''  }",
          "description": "/sonar/rules/add"
        },
        "bulkadd": {
          "type": "string",
          "example": "{'active_severities' :'' ,'languages' : '' , 'severity' :'' , 'rulekey' :'' , 'targetseverity' : '' , 'targetKey' : '' }",
          "description": "/sonar/rules/bulkadd"
        },
        "bulkdelete": {
          "type": "string",
          "example": "{'active_severities' :'' ,'languages' : '' , 'severity' :'' , 'rulekey' :'' , 'targetseverity' : '' , 'targetKey' : '' }",
          "description": "/sonar/rules/bulkdelete"
        },
        "deactrule": {
          "type": "string",
          "example": "{'profilekey' :'' ,'ruleKey' : '' , 'severity' :'' }",
          "description": "/sonar/rules/deactrule"
        },
        "delete": {
          "type": "string",
          "example": "{'profilename' :'' ,'language' : '' }",
          "description": "/sonar/rules/delete"
        },
        "findbykey": {
          "type": "string",
          "example": "{'language' : '' , 'status' : '' , 'key' : ''}",
          "description": "/sonar/rules/findbykey"
        }
      }
    },
    "TechnologyAdminControllerPayload": {
      "type": "object",
      "properties": {
        "cardsdata": {
          "type": "string",
          "example": "{'organizationId': 0}",
          "description": "techadmin/cardsdata"
        },
        "quesdiffwise": {
          "type": "string",
          "example": "{'assessmentId':0, 'organizationId': 0}",
          "description": "techadmin/quesdiffwise"
        }
      }
    },
    "Character": { "type": "object" },
    "MediaUploadcontrollrPayload": {
      "type": "object",
      "properties": {
        "checkResume": {
          "type": "string",
          "example": "{ 'student_id' : 0}",
          "description": "/media/checkResume"
        },
        "fetchAllVideos": {
          "type": "string",
          "example": "{'empId' : 0}",
          "description": "/media/fetchAllVideos"
        },
        "fetchResume": {
          "type": "string",
          "example": "{'student_resume' : '' , 'student_id' : 0  }",
          "description": "/media/fetchResume"
        },
        "getMediaDetails": {
          "type": "string",
          "example": "{'student_id' : 0 }",
          "description": "/media/getMediaDetails"
        },
        "resumeUpload": {
          "type": "string",
          "example": "{'resume' : '' , 'student_id' : 0 , 'media_type' :'R' , 'status' : 'Y'}",
          "description": "/media/resumeUpload"
        },
        "uploadsignedOL": {
          "type": "string",
          "example": "{'student_videos' : 'FileName' , 'student_id': 0 }",
          "description": "/media/uploadsignedOL"
        },
        "vcount": {
          "type": "string",
          "example": "{'student_id' : 0 }",
          "description": "/media/vcount"
        },
        "videoUpload": {
          "type": "string",
          "example": "{'student_video' : 'File Name', 'student_id' : 0 , 'quest_id' :0 , 'media_type' : 'R' , 'status':'Y' }",
          "description": "/media/videoUpload"
        }
      }
    },
    "OrganizationControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'file':'','organization_name':'string','active':'string'}",
          "description": "orgs/add"
        },
        "delete": {
          "type": "string",
          "example": "{'id':0}",
          "description": "orgs/delete"
        },
        "get": {
          "type": "string",
          "example": "{'id':0}",
          "description": "orgs/get"
        },
        "getTestCode": {
          "type": "string",
          "example": "{'organizationId':0}",
          "description": "orgs/getTestCode"
        },
        "orgs": {
          "type": "string",
          "example": "{'org_id':0}",
          "description": "orgs"
        },
        "update": {
          "type": "string",
          "example": "{'file':'','organizationName':'string','organizationId':0,'active':'string'}",
          "description": "orgs/update"
        },
        "updateTestCode": {
          "type": "string",
          "example": "{'organizationId':0,'testCode':0}",
          "description": "orgs/updateTestCode"
        }
      }
    },
    "BatchMasterControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'batchdata':{'batch_name':'string','learning_journey':'string','language_id':0,'batch_start_date':date ,'selected_no_of_weeks':'string','batch_end_date':date,'organizationId':0,'active':'string'}}",
          "description": "batches/add"
        },
        "batches": {
          "type": "string",
          "example": "{'organizationId':0}",
          "description": "batches"
        },
        "delete": {
          "type": "string",
          "example": "{'id':0}",
          "description": "batches/delete"
        },
        "get": {
          "type": "string",
          "example": "{'id':0}",
          "description": "batches/get"
        },
        "update": {
          "type": "string",
          "example": "{'id':0,'batchdata':{'batch_name':'string','learning_journey':'string','language_id':0,'batch_start_date':date,'selected_no_of_weeks':'string','batch_end_date':date,'active':'string'}}",
          "description": "batches/update"
        }
      }
    },
    "AssociateCameraSnapshotControllerPayload": {
      "type": "object",
      "properties": {
        "deletesnap": {
          "type": "string",
          "example": "{'email':'string','organizationId':0,'associateId':0}",
          "description": "associate/deletesnap"
        },
        "snapsave": {
          "type": "string",
          "example": "{'snap' : 'string','snapName':'string','email':'string','organizationId':0,'associateId':0}",
          "description": "associate/snapsave"
        }
      }
    },
    "LanguageInstructorMappingControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'language_id' : 0,'add':'string','remove':'string'}",
          "description": "languageinstructor/add"
        }
      }
    },
    "RoleRightMappingControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'role_id' : 0 , 'rights' : 'string'}",
          "description": "roleright/add"
        }
      }
    },
    "UserMasterPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'userdata' : {'organizationId': 0,'first_name':'string','middle_name':'string','last_name':'string','dob':date,'gender':string,'tenth_year':string,'tenth_percentage':0,'twelve_year':0,'twelve_percentage':0,'graduation_year':0,'graduation_percentage':0,'college_name':string,'university_name':string,'blood_group':O+,'mobile_no':0,'emergency_no':0,'reference_no_first':0,'reference_no_second':0,'email_id':string,'alternate_no':0,'current_address':string,'active':0,'entry_from':0,'graduation_name':string,'internship_nature':string,'pincode':0,'city':string,'district':string,'state':string,'stream':string,'countryCode':0,'mobileCode':0,'default_role':string}}",
          "description": "users/add"
        },
        "allDetails": {
          "type": "string",
          "example": "{'user_id': 0}",
          "description": "users/allDetails"
        },
        "batches": {
          "type": "string",
          "example": "{'user_id': 0}",
          "description": "users/batches"
        },
        "bulkaddemp": {
          "type": "string",
          "example": "{'users': 'string'}",
          "description": "users/bulkaddemp"
        },
        "delete": {
          "type": "string",
          "example": "{'id' : 0}",
          "description": "users/delete"
        },
        "details": {
          "type": "string",
          "example": "{'id' : 0}",
          "description": "users/details"
        },
        "esave": {
          "type": "string",
          "example": "{'data' : 'hhh','role_id' : 0,'organizationId' : 0,'batch_id' : 0,'selectRoleType' : ''}",
          "description": "users/esave"
        },
        "get": {
          "type": "string",
          "example": "{'id' : 0}",
          "description": "users/get"
        },
        "getByEmail": {
          "type": "string",
          "example": "{'email_id' : 'string'}",
          "description": "users/getByEmail"
        },
        "logout": {
          "type": "string",
          "example": "{'email' : 'string'}",
          "description": "users/logout"
        },
        "saveEmployee": {
          "type": "string",
          "example": "{'orgName' : 'string','email':'string','userRole':'string','name':'string','employeeId':0,'departmentId':0,'supervisorId':0,'mobile':0}",
          "description": "users/saveEmployee"
        },
        "update": {
          "type": "string",
          "example": "{'id':0,'userdata' :{'first_name':'string','middle_name':'string','last_name':'string','dob':date,'gender':string,'tenth_year':string,'tenth_percentage':0,'twelve_year':0,'twelve_percentage':0,'graduation_year':0,'graduation_percentage':0,'college_name':string,'university_name':string,'blood_group':O+,'mobile_no':0,'emergency_no':0,'reference_no_first':0,'reference_no_second':0,'email_id':string,'alternate_no':0,'current_address':string,'active':0,'entry_from':0,'graduation_name':string,'internship_nature':string,'pincode':0,'city':string,'district':string,'state':string,'stream':string,'countryCode':0,'mobileCode':0,'default_role':string}}",
          "description": "users/update"
        },
        "updateUserEmpId": {
          "type": "string",
          "example": "{'data' : {'email': 'string','organizationId':0,'empId':0}}",
          "description": "users/updateUserEmpId"
        },
        "updatedetails": {
          "type": "string",
          "example": "{'id' : 0,'mobile_no': 0,'current_address':'string','pincode': 0,'city':'string','district':'string','state':'string','countryCode':0,'mobileCode':0}",
          "description": "users/updatedetails"
        },
        "updateprofile": {
          "type": "string",
          "example": "{'file' : '', 'userId':0,'email':'string'}",
          "description": "users/updateprofile"
        },
        "upload": {
          "type": "string",
          "example": "{'file': ''}",
          "description": "users/upload"
        },
        "users": {
          "type": "string",
          "example": "{'organizationId' : 0}",
          "description": "users"
        }
      }
    },
    "offerLatterControllerPayload": {
      "type": "object",
      "properties": {
        "addTemplate": {
          "type": "string",
          "example": "{'offerLetterTemplate' : '', 'jobProfileId' : 0}",
          "description": "/offerletter/addTemplate"
        },
        "generate": {
          "type": "string",
          "example": "{'empName' : '', 'empDesg' : 'job title' , 'empSalary' :0 , 'officeAddress' : 'Office Address' , 'doj':'' , 'empId': 0 , 'jobPortalId' : 0 , 'sender' : '' }",
          "description": "/offerletter/generate"
        },
        "offerletter": {
          "type": "string",
          "example": "{'organizationId' : 0}",
          "description": "/offerletter"
        },
        "salary": {
          "type": "string",
          "example": "{'email_id' : 0 , 'organization_id': 0 }",
          "description": "/offerletter/salary"
        },
        "save": {
          "type": "string",
          "example": "{'fileName' : '', 'offerLetter' : 'xyz.pdf' , 'empDesg' :'Java Developer' , 'empSalary' : 0 , 'officeAddress':'' , 'doj': 'dd/mm/yyyy' , 'empId' : 0 , 'senderName' : 'xyz' , 'senderEmail':'xyz@gmail.com' , 'email': 'abc@gmail.com' , 'name': 'xyz'}",
          "description": "/offerletter/save"
        },
        "uploadsignedOL": {
          "type": "string",
          "example": "{'offerLeterId' : 0 , 'signedOfferLetter': '' , 'departmentId' : 0 , 'roleId' : 0 , 'supervisorId': 0 , 'countryCode': 0 }",
          "description": "/offerletter/uploadsignedOL"
        },
        "view": {
          "type": "string",
          "example": "{'empId' : 0}",
          "description": "/offerletter/view"
        }
      }
    },
    "UserControllerPayload": {
      "type": "object",
      "properties": {
        "me": {
          "type": "string",
          "example": "{'orgName' :'' , 'data' : {'status' : '' , 'userData' : '' ,  }}",
          "description": "/user/me"
        },
        "meios": {
          "type": "string",
          "example": "{'orgName' :'' , 'data' : {'status' : '' , 'userData' : '' ,  }}",
          "description": "/user/meios"
        },
        "userbyrole": {
          "type": "string",
          "example": "{'role' :'' ,'organization_id' : 0 }",
          "description": "/user/userbyrole"
        }
      }
    },
    "DashboardControllerPayload": {
      "type": "object",
      "properties": {
        "difficulties": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/difficulties"
        },
        "jobportals": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/jobportals"
        },
        "languages": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/languages"
        },
        "roleforright": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/roleforright"
        },
        "roles": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/roles"
        },
        "topics": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/topics"
        },
        "users": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/users"
        }
      }
    },
    "StudentScholarshipControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'key' : '' , 'profilename' : ''}",
          "description": "schlrshp/add"
        },
        "delete": {
          "type": "string",
          "example": "{'language' :'' ,'profilename' : '' }",
          "description": "schlrshp/delete"
        },
        "get": {
          "type": "string",
          "example": "{'scholarshipdata' : '' , 'id' : 0 }",
          "description": "schlrshp/get"
        },
        "schlrshp": {
          "type": "string",
          "example": "{'organizationId' : 0 }",
          "description": "schlrshp"
        },
        "update": {
          "type": "string",
          "example": "{'scholarshipdata' : '' , 'id' : 0 }",
          "description": "schlrshp/update"
        }
      }
    },
    "RightMasterControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'rightdata': '','organizationId':0}",
          "description": "rights/add"
        },
        "delete": {
          "type": "string",
          "example": "{'id': ''}",
          "description": "rights/delete"
        },
        "get": {
          "type": "string",
          "example": "{'id': 0}",
          "description": "rights/get"
        },
        "rights": {
          "type": "string",
          "example": "{'organizationId': 0}",
          "description": "rights"
        },
        "update": {
          "type": "string",
          "example": "{'id':0,'rightdata':{'right_name':'string','rightModuleId':0,'right_url':'','active':'string'}}",
          "description": "rights/update"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "batchId": { "type": "integer", "format": "int64" },
        "batches": {
          "type": "array",
          "items": { "$ref": "#/definitions/LinkedCaseInsensitiveMap" }
        },
        "countryCode": { "type": "string" },
        "createdBy": { "type": "string" },
        "createdDate": { "type": "string", "format": "date-time" },
        "default_mobile_role": { "type": "string" },
        "default_role": { "type": "integer", "format": "int64" },
        "departmentId": { "type": "integer", "format": "int64" },
        "doj": { "type": "string" },
        "email": { "type": "string" },
        "emailVerified": { "type": "boolean" },
        "empDesignation": { "type": "string" },
        "empId": { "type": "integer", "format": "int64" },
        "empSupervisorId": { "type": "integer", "format": "int64" },
        "employeeId": { "type": "integer", "format": "int64" },
        "employeeType": { "type": "string" },
        "fcm_id": { "type": "string" },
        "id": { "type": "integer", "format": "int64" },
        "imageUrl": { "type": "string" },
        "jobPortalId": { "type": "integer", "format": "int64" },
        "lastModifiedBy": { "type": "string" },
        "lastModifiedDate": { "type": "string", "format": "date-time" },
        "lastName": { "type": "string" },
        "learnerId": { "type": "integer", "format": "int64" },
        "mobile": { "type": "integer", "format": "int64" },
        "mobileCode": { "type": "string" },
        "mobileProfilePath": { "type": "string" },
        "name": { "type": "string" },
        "orgActive": { "$ref": "#/definitions/Character" },
        "organizationId": { "type": "integer", "format": "int64" },
        "organizationName": { "type": "string" },
        "organizationUrl": { "type": "string" },
        "profilePath": { "type": "string" },
        "provider": {
          "type": "string",
          "enum": ["local", "facebook", "google", "github", "apple"]
        },
        "providerId": { "type": "string" },
        "rights": {
          "type": "array",
          "items": { "$ref": "#/definitions/LinkedCaseInsensitiveMap" }
        },
        "roles": {
          "type": "array",
          "items": { "$ref": "#/definitions/LinkedCaseInsensitiveMap" }
        },
        "sentCode": { "type": "string" },
        "student_id": { "type": "integer", "format": "int64" },
        "supervisorName": { "type": "string" },
        "userActive": { "$ref": "#/definitions/Character" },
        "user_id": { "type": "integer", "format": "int64" }
      }
    },
    "BadgeMasterControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'file':'','badge' : 'string','badge_name':'string','badge_desc':'string','active':'string','organizationId':0}",
          "description": "badges/add"
        },
        "badges": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "badges"
        },
        "delete": {
          "type": "string",
          "example": "{'id':0}",
          "description": "badges/delete"
        },
        "get": {
          "type": "string",
          "example": "{'id':0}",
          "description": "badges/get"
        },
        "listbyid": {
          "type": "string",
          "example": "{'student_id':0}",
          "description": "badges/listbyid"
        },
        "studentcertification": {
          "type": "string",
          "example": "{'student_id':0}",
          "description": "badges/studentcertification"
        },
        "update": {
          "type": "string",
          "example": "{'file':'','badge_name':'string','badge_desc':'string','badge_data':'string','badge_id':0,'active':'string','organizationId':0}",
          "description": "badges/update"
        }
      }
    },
    "JobPortalSwaggerController": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{ 'data': {'jobPortalTitle': '', 'jobFamily': '' ,'jobPortalDesc': '','noOfVacancies': 0,'interviews': 0,'techSkillRequired': 'Java','userId': 0,'postedDate':'YYYY-MM-DD', 'active':'','organizationId': 0,'webcam':'true','mediaUpload': 'false','detailForm' :'false'}, 'categories': '' }",
          "description": "/jobportal/add"
        },
        "assignintvw": {
          "type": "string",
          "example": "{'organizationId': 1, 'jobPortalId': 1 }",
          "description": "/jobportal/assignintvw"
        },
        "delete": {
          "type": "string",
          "example": "{'jobPortalId': 1}",
          "description": "/jobportal/delete"
        },
        "details": {
          "type": "string",
          "example": "{'organizationId':1,'jobPortalId':1}",
          "description": "/jobportal/details"
        },
        "get": {
          "type": "string",
          "example": "{'jobPortalId': 1}",
          "description": "/jobportal/get"
        },
        "getdesc": {
          "type": "string",
          "example": "{'model': 'java' ,'desg': 'developer'}",
          "description": "/jobportal/getdesc"
        },
        "jobportals": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "/jobportal"
        },
        "jobs": {
          "type": "string",
          "example": "{'orgName': 'realcoderz'}",
          "description": "/jobportal/jobs"
        },
        "template": {
          "type": "string",
          "example": "{'orgName':'realcoderz'}",
          "description": "/jobportal/template"
        },
        "update": {
          "type": "string",
          "example": "{ data: {'jobPortalTitle':'','jobFamily': '','jobPortalDesc': '','noOfVacancies':'','interviews': '',' techSkillRequired': '','userId': 0,'postedDate':'DD/MM/YYYY','active': '','organizationId': 0,'webcam': 'false'}, 'jobPortalId': 0 }",
          "description": "/jobportal/update"
        },
        "updtactive": {
          "type": "string",
          "example": "{'active': 'y','jobPortalId': 1}",
          "description": "/jobportal/updtactive"
        },
        "workflow": {
          "type": "string",
          "example": "{'jobId': 1}",
          "description": "/jobportal/workflow"
        }
      }
    },
    "OrganizationRightMappingControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'organizationId':0,'add':'string','','remove':'string'}",
          "description": "orgright/add"
        },
        "rightbyorg": {
          "type": "string",
          "example": "{'organizationId':0}",
          "description": "orgright/rightbyorg"
        }
      }
    },
    "UserRoleMappingControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'role_id' : 0 , 'add':'string'}",
          "description": "userrole/adduser"
        },
        "byrole": {
          "type": "string",
          "example": "{'role_id' : 0 , 'add' : '' , 'remove' : ''} ",
          "description": "userrole/add"
        }
      }
    },
    "BadgeStudentMappingControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'badge_id' : 1 , 'add' : '', 'remove': ''}",
          "description": "badgestdnts/add"
        },
        "certification": {
          "type": "string",
          "example": "{'level' : 'level 1' , 'students' : ''}",
          "description": "badgestdnts/certification"
        },
        "findall": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "badgestdnts/findall"
        },
        "findbycertid": {
          "type": "string",
          "example": "{'certificateId' : 1}",
          "description": "badgestdnts/findbycertid"
        },
        "findbylevel": {
          "type": "string",
          "example": "{'level' : 'level 1', 'organizationId': 0}",
          "description": "badgestdnts/findbylevel"
        },
        "findbyname": {
          "type": "string",
          "example": "{'userName' : '','level':''}",
          "description": "badgestdnts/findbyname"
        }
      }
    },
    "UserSpecializationControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'specializationData' : '' , 'organizationId' : 0}",
          "description": "spztion/add"
        },
        "delete": {
          "type": "string",
          "example": "{'id' : 0}",
          "description": "spztion/delete"
        },
        "get": {
          "type": "string",
          "example": "{'id' : 0}",
          "description": "spztion/get"
        },
        "spztion": {
          "type": "string",
          "example": "{'organizationId' : 0}",
          "description": "spztion"
        },
        "update": {
          "type": "string",
          "example": "{'specializationData' : '' , 'organizationId' : 0 , 'id' : 0 }",
          "description": "spztion/update"
        }
      }
    },
    "LinkedCaseInsensitiveMap": {
      "type": "object",
      "additionalProperties": { "type": "object" }
    },
    "TakingAssessmentControllerPayload": {
      "type": "object",
      "properties": {
        "assbylearningjrny": {
          "type": "string",
          "example": "{'subsection':'string'}",
          "description": "takeassessments/assbylearningjrny"
        },
        "assessment": {
          "type": "string",
          "example": "{'id':0,'uid':0}",
          "description": "takeassessments/assessment"
        },
        "getresult": {
          "type": "string",
          "example": "{'user_id':0,'aid':0,'uid':0}",
          "description": "takeassessments/getresult"
        },
        "result": {
          "type": "string",
          "example": "{'uid':0,'aid':0}",
          "description": "takeassessments/result"
        },
        "save": {
          "type": "string",
          "example": "{'assessment':'string','counter':0,'user_id':0}",
          "description": "takeassessments/save"
        },
        "settimer": {
          "type": "string",
          "example": "{'uid':0,'aid':0}",
          "description": "takeassessments/settimer"
        },
        "skillassessment": {
          "type": "string",
          "example": "{'id':0}",
          "description": "takeassessments/skillassessment"
        },
        "skillbuilderass": {
          "type": "string",
          "example": "{'subsection':'string'}",
          "description": "takeassessments/skillbuilderass"
        },
        "skillsave": {
          "type": "string",
          "example": "{'assessment':'string','user_id':0}",
          "description": "takeassessments/skillsave"
        }
      }
    },
    "CompilerControllerPayload": {
      "type": "object",
      "properties": {
        "crt": {
          "type": "string",
          "example": "{'code' : 0,'id':0,'qid':0,'aid':0,'input':0,'stdout':'string'}",
          "description": "cmp/crt"
        }
      }
    },
    "LanguageMasterControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'languagedata' :'string'}",
          "description": "languages/add"
        },
        "delete": {
          "type": "string",
          "example": "{'id' :0}",
          "description": "languages/delete"
        },
        "get": {
          "type": "string",
          "example": "{'id' :0}",
          "description": "languages/get"
        },
        "languages": {
          "type": "string",
          "example": "{'organizationId' :0}",
          "description": "languages"
        },
        "update": {
          "type": "string",
          "example": "{'languagedata' :'string','id':0}",
          "description": "languages/update"
        }
      }
    },
    "StudentValidateControllerPayload": {
      "type": "object",
      "properties": {
        "languages": {
          "type": "string",
          "example": "{'email' : 'abc@gmail.com' , 'code' : '' , 'userId' : 0 ,'organizationId' : 0 }",
          "description": "validate/add"
        },
        "topics": {
          "type": "string",
          "example": "{'email' : 'arb@gmail.com'}",
          "description": "validate/student"
        }
      }
    },
    "AssessmentCodingMarksControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'marks' : 0}",
          "description": "codemarks/add"
        },
        "codemarks": {
          "type": "string",
          "example": "{'organizationId' : 0}",
          "description": "codemarks"
        },
        "delete": {
          "type": "string",
          "example": "{'marksId':0}",
          "description": "codemarks/delete"
        },
        "get": {
          "type": "string",
          "example": "{'marksId' : 0}",
          "description": "codemarks/get"
        },
        "issues": {
          "type": "string",
          "example": "{'marksId':0,'criticalIssues':'string','majorIssues':'string','minorIssues':'string'}",
          "description": "codemarks/issues"
        },
        "update": {
          "type": "string",
          "example": "{'marks' : 0,'marksId':0}",
          "description": "codemarks/update"
        }
      }
    },
    "DifficultyMasterControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'difficultydata' :'string','organizationId':0}",
          "description": "difficulties/add"
        },
        "delete": {
          "type": "string",
          "example": "{'id' :0}",
          "description": "difficulties/delete"
        },
        "difficulties": {
          "type": "string",
          "example": "{'organizationId' :0}",
          "description": "difficulties"
        },
        "get": {
          "type": "string",
          "example": "{'id' :0}",
          "description": "difficulties/get"
        },
        "update": {
          "type": "string",
          "example": "{'difficultydata':'string','id' :0,'organizationId':0}",
          "description": "difficulties/update"
        }
      }
    },
    "predictAIScore": {
      "type": "object",
      "properties": { "student_id": { "type": "integer", "format": "int64" } }
    },
    "CalenderEventControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'candidateEmail' :'xyz@gmail.com' , 'startDate' : 'dd/mm/yyyy', 'endDate' : 'dd/mm/yyyy','interviewerEmail': 'abc@gmail.com', 'description' : ' ' , 'title' : '' , 'recruiter_email' : 'pqr@gmail.com' ,'organizationId' : 0 }",
          "description": "calender/add"
        },
        "delete": {
          "type": "string",
          "example": "{ 'id' : 0}",
          "description": "calender/delete"
        },
        "get": {
          "type": "string",
          "example": "{'email' : 'abc@gmail.com', 'organizationId': 0}",
          "description": "calender/get"
        },
        "getAllCandidateEmail": {
          "type": "string",
          "example": "{'email' : 'abc@gmail.com' , 'organizationId' : 0}",
          "description": "calender/getAllCandidateEmail"
        },
        "getAllInterviwerEmail": {
          "type": "string",
          "example": "{'organizationId' : 0}",
          "description": "calender/getAllInterviwerEmail"
        },
        "getAllIntrSchedForRecMang": {
          "type": "string",
          "example": "{ 'organizationId': 0}",
          "description": "calender/getAllIntrSchedForRecMang"
        },
        "getNotificationForCandidate": {
          "type": "string",
          "example": "{'email' : 'xyz@gmail.com'}",
          "description": "calender/getNotificationForCandidate"
        },
        "getNotificationForInstructor1": {
          "type": "string",
          "example": "{'organizationId' : 0, 'email' : 'xyz@gmail.com'}",
          "description": "calender/getNotificationForInstructor1"
        },
        "getNotificationForInterviewer": {
          "type": "string",
          "example": "{'organizationId' : 0 , 'email' : 'xyz@gmail.com'}",
          "description": "calender/getNotificationForInterviewer"
        },
        "getNotificationForRecruiter": {
          "type": "string",
          "example": "{'email' : 'xyz@gmail.com', 'organizationId': 0}",
          "description": "calender/getNotificationForRecruiter"
        },
        "getNotificationForRecruiterManager": {
          "type": "string",
          "example": "{'organizationId' : 0 , 'email' : 'xyz@gmail.com'}",
          "description": "calender/getNotificationForRecruiterManager"
        },
        "getStudentStage": {
          "type": "string",
          "example": "{'organizationId' : 0 ,'student_id': 0}",
          "description": "calender/getStudentStage"
        },
        "recruiterManagerAllInterList": {
          "type": "string",
          "example": "{'job_portal_id' : 0, 'organizationId': 0}",
          "description": "calender/recruiterManagerAllInterList"
        },
        "recruiterschedulemeet": {
          "type": "string",
          "example": "{'email' : 'abc@gmail.com' , 'organizationId' : 0 , 'job_portal_id' : 0}",
          "description": "calender/recruiterschedulemeet"
        }
      }
    },
    "MobileNotificationControllerPayload": {
      "type": "object",
      "properties": {
        "getNotification": {
          "type": "string",
          "example": "{'email':'string','role':'string','roles':'string'}",
          "description": "notification/getNotification"
        },
        "saveNotification": {
          "type": "string",
          "example": "{'reciever_role':'string','message':'string','reciever_email':'string','title':'string','send_notification':'string','msg':'string'}",
          "description": "notification/saveNotification"
        },
        "updateNotification": {
          "type": "string",
          "example": "{'flag':'string','id':0}",
          "description": "notification/updateNotification"
        }
      }
    },
    "StudentScholarshipMappingControllerPayload": {
      "type": "object",
      "properties": {
        "languages": {
          "type": "string",
          "example": "{'scholarship_id' : 0 , 'students' :'' }",
          "description": "/stdntschlrshp/add"
        }
      }
    },
    "InterviewerDashboardControllerPayload": {
      "type": "object",
      "properties": {
        "all": {
          "type": "string",
          "example": "{'stage' : 'interview1', 'organizationId': 1 , 'jobProfile' : 'Java' , 'email': 'abc@gmail.com' , 'round' : 0  }",
          "description": "/dashboard/intvwstdnts"
        },
        "avgallscores": {
          "type": "string",
          "example": "{'email': 'xyz@gmail.com' , 'organizationId': 0 , 'userType': 'interviewer1' }",
          "description": "/dashboard/avgallscores"
        },
        "codematrix": {
          "type": "string",
          "example": "{'studentId': 0 }",
          "description": "/dashboard/codematrix"
        },
        "intJobProfiles": {
          "type": "string",
          "example": "{'organizationId': 0 , 'email' :'xyz@gmail.com'}",
          "description": "/dashboard/intJobProfiles"
        },
        "intvdashfilter": {
          "type": "string",
          "example": "{'email': 'xyz@gmail.com' , 'organizationId': 0 , 'userType': 'interviewer1','job_portal_id': 0 , 'stage':'' }",
          "description": "/dashboard/intvdashfilter"
        },
        "studenttopicperf": {
          "type": "string",
          "example": "{'studentId' : 1}",
          "description": "/dashboard/studenttopicperf"
        },
        "totalcounts": {
          "type": "string",
          "example": "{'userType' : 'interviewer1', 'organizationId': 1 , 'email_id': 'abc@gmail.com'  }",
          "description": "/dashboard/totalcounts"
        },
        "updatestdtdetails": {
          "type": "string",
          "example": "{'studentdata' :{ 'interviewer_name1' :'Arvind'   , 'progress_percentage' : 89 , 'totalScore' : 33 , 'total_percentage1' : 78 , 'selected_stage1' : '' , 'techName' : 'Java'} , 'id' : 0 , 'details': '' }",
          "description": "/dashboard/updatestdtdetails"
        },
        "updatestdtfdbck2": {
          "type": "string",
          "example": "{'studentdata' :{ 'interviewer_name1' :'Arvind'  , 'progress_percentage' : 89 , 'totalScore' : 33 , 'total_percentage1' : 78 , 'selected_stage1' : '' , 'techName' : 'Java'} , 'id' : 0 , 'details': ''}",
          "description": "/dashboard/updatestdtfdbck2"
        },
        "updatestdtfdbck3": {
          "type": "string",
          "example": "{'intvrfdbck' :{ 'choose' :''  , 'interviewer_name2' : 'Arvind Verma' , 'specilaization' : 'Java' , 'total_percentage2' : 78 , 'totalScore2' : 78 , 'progress_percentage' : 00.0 } , 'student_id' : 0 , 'details': ''}",
          "description": "/dashboard/updatestdtfdbck3"
        },
        "userrole": {
          "type": "string",
          "example": "{'organizationId': 0 , 'email_id' :'xyz@gmail.com'}",
          "description": "/dashboard/userrole"
        }
      }
    },
    "SucccessPredictionControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'ai_prediction' : 0 , 'coding_prediction' : 0 ,'mcq_prediction' : 0 , 'interview1_prediction' : 0 ,'interview2_prediction' : 0 , 'total_prediction' : 0 , 'active' : '' ,'organizationId' : 0}",
          "description": "prediction/add"
        },
        "byid": {
          "type": "string",
          "example": "{'success_id' : 0 }",
          "description": "prediction/byid"
        },
        "checkrule": {
          "type": "string",
          "example": "{ 'organization_id' :0 }",
          "description": "prediction/checkrule"
        },
        "delete": {
          "type": "string",
          "example": "{'success_id' : 0}",
          "description": "prediction/delete"
        },
        "prediction": {
          "type": "string",
          "example": "{'organizationId' : 0}",
          "description": "prediction"
        },
        "update": {
          "type": "string",
          "example": "{'success_id' : 0 , 'total_prediction_data' : { 'active': 'Y' , 'ai_prediction' : 0 ,'coding_prediction' : 0 ,  'mcq_prediction' :  0 ,'interview1_prediction' : 0 , 'interview2_prediction' : 0 , 'total_prediction' : 0 , 'organizationId' : 0   } }",
          "description": "prediction/update"
        }
      }
    },
    "RoleMasterControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'roledata': 'string','organizationId':0}",
          "description": "roles/add"
        },
        "delete": {
          "type": "string",
          "example": "{'id':0}",
          "description": "roles/delete"
        },
        "get": {
          "type": "string",
          "example": "{'id': 0}",
          "description": "roles/get"
        },
        "roles": {
          "type": "string",
          "example": "{'organizationId': 0}",
          "description": "roles"
        },
        "roletypes": {
          "type": "string",
          "example": "{'organizationId':0,'id':0}",
          "description": "roles/roletypes"
        },
        "update": {
          "type": "string",
          "example": "{'roledata':'string','id':0,'organizationId':0}",
          "description": "roles/update"
        }
      }
    },
    "TopicMasterControllerPayload": {
      "type": "object",
      "properties": {
        "add": {
          "type": "string",
          "example": "{'topicdata' : '' , 'organizationId' : 0}",
          "description": "topics/add"
        },
        "delete": {
          "type": "string",
          "example": "{'id' : 0}",
          "description": "topics/delete"
        },
        "get": {
          "type": "string",
          "example": "{'id' : 0}",
          "description": "topics/get"
        },
        "topics": {
          "type": "string",
          "example": "{'organizationId' : 0}",
          "description": "topics"
        },
        "update": {
          "type": "string",
          "example": "{'topicdata' : '' , 'organizationId' : 0 , 'id' : 0 }",
          "description": "topics/update"
        }
      }
    },
    "CommonControllerPayload": {
      "type": "object",
      "properties": {
        "allInterviewerJobVisible": {
          "type": "string",
          "example": "{'email': string,'organizationId' : 1}",
          "description": "common/allInterviewerJobVisible"
        },
        "allJobOpeningsforInterviewer": {
          "type": "string",
          "example": "{'email': string,'organizationId' : 1}",
          "description": "common/allJobOpeningsforInterviewer"
        },
        "allJobOpeningsforRecruiter": {
          "type": "string",
          "example": "{'role': string,'email': string,'organizationId' : 1}",
          "description": "common/allJobOpeningsforRecruiter"
        },
        "allRecruiterJobVisible": {
          "type": "string",
          "example": "{'email': string,'organizationId' : 1}",
          "description": "common/allRecruiterJobVisible"
        },
        "allinstructors": {
          "type": "string",
          "example": "{'language_id' :0, 'organizationId' : 1}",
          "description": "common/allinstructors"
        },
        "associates": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/associates"
        },
        "associbybatch": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/associbybatch"
        },
        "badges": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/badges"
        },
        "batches": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/batches"
        },
        "codingmarks": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/codingmarks"
        },
        "defaultdata": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/defaultdata"
        },
        "difficulties": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/difficulties"
        },
        "events": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/events"
        },
        "filterdata": {
          "type": "string",
          "example": "{'batch_id' :0, 'organizationId' : 1}",
          "description": "common/filterdata"
        },
        "instructors": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/instructors"
        },
        "instructorsbybatch": {
          "type": "string",
          "example": "{'batch_id' :0, 'organizationId' : 1}",
          "description": "common/instructorsbybatch"
        },
        "instructorsbylanguage": {
          "type": "string",
          "example": "{'language_id' :0, 'organizationId' : 1}",
          "description": "common/instructorsbylanguage"
        },
        "jobportals": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/jobportals"
        },
        "jobprofiles": {
          "type": "string",
          "example": "{'role': string,'email': string,'organizationId' : 1}",
          "description": "common/jobprofiles"
        },
        "languages": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/languages"
        },
        "orgRights": {
          "type": "string",
          "example": "{'organizationName' : string}",
          "description": "common/orgRights"
        },
        "rights": {
          "type": "string",
          "example": "{'role_id' : 0, 'organizationId' : 1}",
          "description": "common/rights"
        },
        "rightsbyrole": {
          "type": "string",
          "example": "{'role_id' : 0}",
          "description": "common/rightsbyrole"
        },
        "roleforright": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/roleforright"
        },
        "roles": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/roles"
        },
        "stdntbyschrshp": {
          "type": "string",
          "example": "{'scholarship_id' : 0}",
          "description": "common/stdntbyschrshp"
        },
        "stdntforschrshp": {
          "type": "string",
          "example": "{'scholarship_id' : 0}",
          "description": "common/stdntforschrshp"
        },
        "stdntrole": {
          "type": "string",
          "example": "{'role': string, 'organizationId' : 1}",
          "description": "common/stdntrole"
        },
        "stdnts": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/stdnts"
        },
        "stdntsbybadge": {
          "type": "string",
          "example": "{'badge_id' : 0}",
          "description": "common/stdntsbybadge"
        },
        "stdntsbyrole": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/stdntsbyrole"
        },
        "stdtouser": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/stdtouser"
        },
        "students": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/students"
        },
        "topics": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/topics"
        },
        "users": {
          "type": "string",
          "example": "{'organizationId' : 1}",
          "description": "common/users"
        },
        "usersbyrole": {
          "type": "string",
          "example": "{'role_id' : 0, 'organizationId' : 1}",
          "description": "common/usersbyrole"
        }
      }
    }
  }
}
